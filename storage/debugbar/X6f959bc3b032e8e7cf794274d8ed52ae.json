{"__meta":{"id":"X6f959bc3b032e8e7cf794274d8ed52ae","datetime":"2021-02-09 10:45:42","utime":1612863942.563331,"method":"POST","uri":"\/_ignition\/share-report","ip":"172.19.0.1"},"php":{"version":"8.0.1","interface":"cli-server"},"messages":{"count":0,"messages":[]},"time":{"start":1612863941.715652,"end":1612863942.563353,"duration":0.8477010726928711,"duration_str":"848ms","measures":[{"label":"Booting","start":1612863941.715652,"relative_start":0,"end":1612863941.796886,"relative_end":1612863941.796886,"duration":0.08123397827148438,"duration_str":"81.23ms","params":[],"collector":null},{"label":"Application","start":1612863941.797046,"relative_start":0.08139395713806152,"end":1612863942.563362,"relative_end":8.821487426757812e-6,"duration":0.7663159370422363,"duration_str":"766ms","params":[],"collector":null}]},"memory":{"peak_usage":6745296,"peak_usage_str":"6MB"},"exceptions":{"count":0,"exceptions":[]},"views":{"nb_templates":0,"templates":[]},"route":{"uri":"POST _ignition\/share-report","middleware":"Facade\\Ignition\\Http\\Middleware\\IgnitionEnabled, Facade\\Ignition\\Http\\Middleware\\IgnitionConfigValueEnabled:enableShareButton","uses":"Facade\\Ignition\\Http\\Controllers\\ShareReportController@__invoke","controller":"Facade\\Ignition\\Http\\Controllers\\ShareReportController","as":"ignition.shareReport","namespace":null,"prefix":"_ignition","where":[]},"queries":{"nb_statements":0,"nb_failed_statements":0,"accumulated_duration":0,"accumulated_duration_str":"0\u03bcs","statements":[]},"models":{"data":[],"count":0},"swiftmailer_mails":{"count":0,"mails":[]},"gate":{"count":0,"messages":[]},"session":[],"request":{"path_info":"\/_ignition\/share-report","status_code":"<pre class=sf-dump id=sf-dump-941836279 data-indent-pad=\"  \"><span class=sf-dump-num>200<\/span>\n<\/pre><script>Sfdump(\"sf-dump-941836279\", {\"maxDepth\":0})<\/script>\n","status_text":"OK","format":"html","content_type":"application\/json","request_query":"<pre class=sf-dump id=sf-dump-482048075 data-indent-pad=\"  \">[]\n<\/pre><script>Sfdump(\"sf-dump-482048075\", {\"maxDepth\":0})<\/script>\n","request_request":"<pre class=sf-dump id=sf-dump-1664117262 data-indent-pad=\"  \"><span class=sf-dump-note>array:3<\/span> [<samp data-depth=1 class=sf-dump-expanded>\n  \"<span class=sf-dump-key>report<\/span>\" => \"<span class=sf-dump-str title=\"120115 characters\">{&quot;notifier&quot;:&quot;Laravel Client&quot;,&quot;language&quot;:&quot;PHP&quot;,&quot;framework_version&quot;:&quot;8.23.1&quot;,&quot;language_version&quot;:&quot;8.0.1&quot;,&quot;exception_class&quot;:&quot;Swift_TransportException&quot;,&quot;seen_at&quot;:1612863929,&quot;message&quot;:&quot;Expected response code 250 but got code \\&quot;530\\&quot;, with message \\&quot;530 5.7.1 Authentication required\\r\\n\\&quot;&quot;,&quot;glows&quot;:[],&quot;solutions&quot;:[],&quot;stacktrace&quot;:[{&quot;line_number&quot;:460,&quot;method&quot;:&quot;assertResponseCode&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;445&quot;:&quot;    protected function assertResponseCode($response, $wanted)&quot;,&quot;446&quot;:&quot;    {&quot;,&quot;447&quot;:&quot;        if (!$response) {&quot;,&quot;448&quot;:&quot;            $this-&gt;throwException(new Swift_TransportException(&#039;Expected response code &#039;.implode(&#039;\/&#039;, $wanted).&#039; but got an empty response&#039;));&quot;,&quot;449&quot;:&quot;        }&quot;,&quot;450&quot;:&quot;&quot;,&quot;451&quot;:&quot;        list($code) = sscanf($response, &#039;%3d&#039;);&quot;,&quot;452&quot;:&quot;        $valid = (empty($wanted) || \\\\in_array($code, $wanted));&quot;,&quot;453&quot;:&quot;&quot;,&quot;454&quot;:&quot;        if ($evt = $this-&gt;eventDispatcher-&gt;createResponseEvent($this, $response,&quot;,&quot;455&quot;:&quot;            $valid)) {&quot;,&quot;456&quot;:&quot;            $this-&gt;eventDispatcher-&gt;dispatchEvent($evt, &#039;responseReceived&#039;);&quot;,&quot;457&quot;:&quot;        }&quot;,&quot;458&quot;:&quot;&quot;,&quot;459&quot;:&quot;        if (!$valid) {&quot;,&quot;460&quot;:&quot;            $this-&gt;throwException(new Swift_TransportException(&#039;Expected response code &#039;.implode(&#039;\/&#039;, $wanted).&#039; but got code \\&quot;&#039;.$code.&#039;\\&quot;, with message \\&quot;&#039;.$response.&#039;\\&quot;&#039;, $code));&quot;,&quot;461&quot;:&quot;        }&quot;,&quot;462&quot;:&quot;    }&quot;,&quot;463&quot;:&quot;&quot;,&quot;464&quot;:&quot;    \/** Get an entire multi-line response using its sequence number *\/&quot;,&quot;465&quot;:&quot;    protected function getFullResponse($seq)&quot;,&quot;466&quot;:&quot;    {&quot;,&quot;467&quot;:&quot;        $response = &#039;&#039;;&quot;,&quot;468&quot;:&quot;        try {&quot;,&quot;469&quot;:&quot;            do {&quot;,&quot;470&quot;:&quot;                $line = $this-&gt;buffer-&gt;readLine($seq);&quot;,&quot;471&quot;:&quot;                $response .= $line;&quot;,&quot;472&quot;:&quot;            } while (null !== $line &amp;&amp; false !== $line &amp;&amp; &#039; &#039; != $line[3]);&quot;,&quot;473&quot;:&quot;        } catch (Swift_TransportException $e) {&quot;,&quot;474&quot;:&quot;            $this-&gt;throwException($e);&quot;,&quot;475&quot;:&quot;        } catch (Swift_IoException $e) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:345,&quot;method&quot;:&quot;executeCommand&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;330&quot;:&quot;            $this-&gt;eventDispatcher-&gt;dispatchEvent($evt, &#039;commandSent&#039;);&quot;,&quot;331&quot;:&quot;        }&quot;,&quot;332&quot;:&quot;&quot;,&quot;333&quot;:&quot;        $this-&gt;pipeline[] = [$command, $seq, $codes, $address];&quot;,&quot;334&quot;:&quot;&quot;,&quot;335&quot;:&quot;        if ($pipeline &amp;&amp; $this-&gt;pipelining) {&quot;,&quot;336&quot;:&quot;            return null;&quot;,&quot;337&quot;:&quot;        }&quot;,&quot;338&quot;:&quot;&quot;,&quot;339&quot;:&quot;        $response = null;&quot;,&quot;340&quot;:&quot;&quot;,&quot;341&quot;:&quot;        while ($this-&gt;pipeline) {&quot;,&quot;342&quot;:&quot;            list($command, $seq, $codes, $address) = array_shift($this-&gt;pipeline);&quot;,&quot;343&quot;:&quot;            $response = $this-&gt;getFullResponse($seq);&quot;,&quot;344&quot;:&quot;            try {&quot;,&quot;345&quot;:&quot;                $this-&gt;assertResponseCode($response, $codes);&quot;,&quot;346&quot;:&quot;            } catch (Swift_TransportException $e) {&quot;,&quot;347&quot;:&quot;                if ($this-&gt;pipeline &amp;&amp; $address) {&quot;,&quot;348&quot;:&quot;                    $failures[] = $address;&quot;,&quot;349&quot;:&quot;                } else {&quot;,&quot;350&quot;:&quot;                    $this-&gt;throwException($e);&quot;,&quot;351&quot;:&quot;                }&quot;,&quot;352&quot;:&quot;            }&quot;,&quot;353&quot;:&quot;        }&quot;,&quot;354&quot;:&quot;&quot;,&quot;355&quot;:&quot;        return $response;&quot;,&quot;356&quot;:&quot;    }&quot;,&quot;357&quot;:&quot;&quot;,&quot;358&quot;:&quot;    \/** Read the opening SMTP greeting *\/&quot;,&quot;359&quot;:&quot;    protected function readGreeting()&quot;,&quot;360&quot;:&quot;    {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:305,&quot;method&quot;:&quot;executeCommand&quot;,&quot;class&quot;:&quot;Swift_Transport_EsmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;290&quot;:&quot;     *\/&quot;,&quot;291&quot;:&quot;    public function executeCommand($command, $codes = [], &amp;$failures = null, $pipeline = false, $address = null)&quot;,&quot;292&quot;:&quot;    {&quot;,&quot;293&quot;:&quot;        $failures = (array) $failures;&quot;,&quot;294&quot;:&quot;        $stopSignal = false;&quot;,&quot;295&quot;:&quot;        $response = null;&quot;,&quot;296&quot;:&quot;        foreach ($this-&gt;getActiveHandlers() as $handler) {&quot;,&quot;297&quot;:&quot;            $response = $handler-&gt;onCommand(&quot;,&quot;298&quot;:&quot;                $this, $command, $codes, $failures, $stopSignal&quot;,&quot;299&quot;:&quot;                );&quot;,&quot;300&quot;:&quot;            if ($stopSignal) {&quot;,&quot;301&quot;:&quot;                return $response;&quot;,&quot;302&quot;:&quot;            }&quot;,&quot;303&quot;:&quot;        }&quot;,&quot;304&quot;:&quot;&quot;,&quot;305&quot;:&quot;        return parent::executeCommand($command, $codes, $failures, $pipeline, $address);&quot;,&quot;306&quot;:&quot;    }&quot;,&quot;307&quot;:&quot;&quot;,&quot;308&quot;:&quot;    \/** Mixin handling method for ESMTP handlers *\/&quot;,&quot;309&quot;:&quot;    public function __call($method, $args)&quot;,&quot;310&quot;:&quot;    {&quot;,&quot;311&quot;:&quot;        foreach ($this-&gt;handlers as $handler) {&quot;,&quot;312&quot;:&quot;            if (\\\\in_array(strtolower($method),&quot;,&quot;313&quot;:&quot;                array_map(&#039;strtolower&#039;, (array) $handler-&gt;exposeMixinMethods())&quot;,&quot;314&quot;:&quot;                )) {&quot;,&quot;315&quot;:&quot;                $return = \\\\call_user_func_array([$handler, $method], $args);&quot;,&quot;316&quot;:&quot;                \/\/ Allow fluid method calls&quot;,&quot;317&quot;:&quot;                if (null === $return &amp;&amp; &#039;set&#039; == substr($method, 0, 3)) {&quot;,&quot;318&quot;:&quot;                    return $this;&quot;,&quot;319&quot;:&quot;                } else {&quot;,&quot;320&quot;:&quot;                    return $return;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/EsmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/EsmtpTransport.php&quot;},{&quot;line_number&quot;:393,&quot;method&quot;:&quot;doDataCommand&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;378&quot;:&quot;            );&quot;,&quot;379&quot;:&quot;    }&quot;,&quot;380&quot;:&quot;&quot;,&quot;381&quot;:&quot;    \/** Send the RCPT TO command *\/&quot;,&quot;382&quot;:&quot;    protected function doRcptToCommand($address)&quot;,&quot;383&quot;:&quot;    {&quot;,&quot;384&quot;:&quot;        $address = $this-&gt;addressEncoder-&gt;encodeString($address);&quot;,&quot;385&quot;:&quot;        $this-&gt;executeCommand(&quot;,&quot;386&quot;:&quot;            sprintf(\\&quot;RCPT TO:&lt;%s&gt;\\\\r\\\\n\\&quot;, $address), [250, 251, 252], $failures, true, $address&quot;,&quot;387&quot;:&quot;            );&quot;,&quot;388&quot;:&quot;    }&quot;,&quot;389&quot;:&quot;&quot;,&quot;390&quot;:&quot;    \/** Send the DATA command *\/&quot;,&quot;391&quot;:&quot;    protected function doDataCommand(&amp;$failedRecipients)&quot;,&quot;392&quot;:&quot;    {&quot;,&quot;393&quot;:&quot;        $this-&gt;executeCommand(\\&quot;DATA\\\\r\\\\n\\&quot;, [354], $failedRecipients);&quot;,&quot;394&quot;:&quot;    }&quot;,&quot;395&quot;:&quot;&quot;,&quot;396&quot;:&quot;    \/** Stream the contents of the message over the buffer *\/&quot;,&quot;397&quot;:&quot;    protected function streamMessage(Swift_Mime_SimpleMessage $message)&quot;,&quot;398&quot;:&quot;    {&quot;,&quot;399&quot;:&quot;        $this-&gt;buffer-&gt;setWriteTranslations([\\&quot;\\\\r\\\\n.\\&quot; =&gt; \\&quot;\\\\r\\\\n..\\&quot;]);&quot;,&quot;400&quot;:&quot;        try {&quot;,&quot;401&quot;:&quot;            $message-&gt;toByteStream($this-&gt;buffer);&quot;,&quot;402&quot;:&quot;            $this-&gt;buffer-&gt;flushBuffers();&quot;,&quot;403&quot;:&quot;        } catch (Swift_TransportException $e) {&quot;,&quot;404&quot;:&quot;            $this-&gt;throwException($e);&quot;,&quot;405&quot;:&quot;        }&quot;,&quot;406&quot;:&quot;        $this-&gt;buffer-&gt;setWriteTranslations([]);&quot;,&quot;407&quot;:&quot;        $this-&gt;executeCommand(\\&quot;\\\\r\\\\n.\\\\r\\\\n\\&quot;, [250]);&quot;,&quot;408&quot;:&quot;    }&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:500,&quot;method&quot;:&quot;doMailTransaction&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;485&quot;:&quot;        $sent = 0;&quot;,&quot;486&quot;:&quot;        $this-&gt;doMailFromCommand($reversePath);&quot;,&quot;487&quot;:&quot;        foreach ($recipients as $forwardPath) {&quot;,&quot;488&quot;:&quot;            try {&quot;,&quot;489&quot;:&quot;                $this-&gt;doRcptToCommand($forwardPath);&quot;,&quot;490&quot;:&quot;                ++$sent;&quot;,&quot;491&quot;:&quot;            } catch (Swift_TransportException $e) {&quot;,&quot;492&quot;:&quot;                $failedRecipients[] = $forwardPath;&quot;,&quot;493&quot;:&quot;            } catch (Swift_AddressEncoderException $e) {&quot;,&quot;494&quot;:&quot;                $failedRecipients[] = $forwardPath;&quot;,&quot;495&quot;:&quot;            }&quot;,&quot;496&quot;:&quot;        }&quot;,&quot;497&quot;:&quot;&quot;,&quot;498&quot;:&quot;        if (0 != $sent) {&quot;,&quot;499&quot;:&quot;            $sent += \\\\count($failedRecipients);&quot;,&quot;500&quot;:&quot;            $this-&gt;doDataCommand($failedRecipients);&quot;,&quot;501&quot;:&quot;            $sent -= \\\\count($failedRecipients);&quot;,&quot;502&quot;:&quot;&quot;,&quot;503&quot;:&quot;            $this-&gt;streamMessage($message);&quot;,&quot;504&quot;:&quot;        } else {&quot;,&quot;505&quot;:&quot;            $this-&gt;reset();&quot;,&quot;506&quot;:&quot;        }&quot;,&quot;507&quot;:&quot;&quot;,&quot;508&quot;:&quot;        return $sent;&quot;,&quot;509&quot;:&quot;    }&quot;,&quot;510&quot;:&quot;&quot;,&quot;511&quot;:&quot;    \/** Send a message to the given To: recipients *\/&quot;,&quot;512&quot;:&quot;    private function sendTo(Swift_Mime_SimpleMessage $message, $reversePath, array $to, array &amp;$failedRecipients)&quot;,&quot;513&quot;:&quot;    {&quot;,&quot;514&quot;:&quot;        if (empty($to)) {&quot;,&quot;515&quot;:&quot;            return 0;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:519,&quot;method&quot;:&quot;sendTo&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;504&quot;:&quot;        } else {&quot;,&quot;505&quot;:&quot;            $this-&gt;reset();&quot;,&quot;506&quot;:&quot;        }&quot;,&quot;507&quot;:&quot;&quot;,&quot;508&quot;:&quot;        return $sent;&quot;,&quot;509&quot;:&quot;    }&quot;,&quot;510&quot;:&quot;&quot;,&quot;511&quot;:&quot;    \/** Send a message to the given To: recipients *\/&quot;,&quot;512&quot;:&quot;    private function sendTo(Swift_Mime_SimpleMessage $message, $reversePath, array $to, array &amp;$failedRecipients)&quot;,&quot;513&quot;:&quot;    {&quot;,&quot;514&quot;:&quot;        if (empty($to)) {&quot;,&quot;515&quot;:&quot;            return 0;&quot;,&quot;516&quot;:&quot;        }&quot;,&quot;517&quot;:&quot;&quot;,&quot;518&quot;:&quot;        return $this-&gt;doMailTransaction($message, $reversePath, array_keys($to),&quot;,&quot;519&quot;:&quot;            $failedRecipients);&quot;,&quot;520&quot;:&quot;    }&quot;,&quot;521&quot;:&quot;&quot;,&quot;522&quot;:&quot;    \/** Send a message to all Bcc: recipients *\/&quot;,&quot;523&quot;:&quot;    private function sendBcc(Swift_Mime_SimpleMessage $message, $reversePath, array $bcc, array &amp;$failedRecipients)&quot;,&quot;524&quot;:&quot;    {&quot;,&quot;525&quot;:&quot;        $sent = 0;&quot;,&quot;526&quot;:&quot;        foreach ($bcc as $forwardPath =&gt; $name) {&quot;,&quot;527&quot;:&quot;            $message-&gt;setBcc([$forwardPath =&gt; $name]);&quot;,&quot;528&quot;:&quot;            $sent += $this-&gt;doMailTransaction(&quot;,&quot;529&quot;:&quot;                $message, $reversePath, [$forwardPath], $failedRecipients&quot;,&quot;530&quot;:&quot;                );&quot;,&quot;531&quot;:&quot;        }&quot;,&quot;532&quot;:&quot;&quot;,&quot;533&quot;:&quot;        return $sent;&quot;,&quot;534&quot;:&quot;    }&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:206,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Swift_Transport_AbstractSmtpTransport&quot;,&quot;code_snippet&quot;:{&quot;191&quot;:&quot;            }&quot;,&quot;192&quot;:&quot;        }&quot;,&quot;193&quot;:&quot;&quot;,&quot;194&quot;:&quot;        if (!$reversePath = $this-&gt;getReversePath($message)) {&quot;,&quot;195&quot;:&quot;            $this-&gt;throwException(new Swift_TransportException(&#039;Cannot send message without a sender address&#039;));&quot;,&quot;196&quot;:&quot;        }&quot;,&quot;197&quot;:&quot;&quot;,&quot;198&quot;:&quot;        $to = (array) $message-&gt;getTo();&quot;,&quot;199&quot;:&quot;        $cc = (array) $message-&gt;getCc();&quot;,&quot;200&quot;:&quot;        $tos = array_merge($to, $cc);&quot;,&quot;201&quot;:&quot;        $bcc = (array) $message-&gt;getBcc();&quot;,&quot;202&quot;:&quot;&quot;,&quot;203&quot;:&quot;        $message-&gt;setBcc([]);&quot;,&quot;204&quot;:&quot;&quot;,&quot;205&quot;:&quot;        try {&quot;,&quot;206&quot;:&quot;            $sent += $this-&gt;sendTo($message, $reversePath, $tos, $failedRecipients);&quot;,&quot;207&quot;:&quot;            $sent += $this-&gt;sendBcc($message, $reversePath, $bcc, $failedRecipients);&quot;,&quot;208&quot;:&quot;        } finally {&quot;,&quot;209&quot;:&quot;            $message-&gt;setBcc($bcc);&quot;,&quot;210&quot;:&quot;        }&quot;,&quot;211&quot;:&quot;&quot;,&quot;212&quot;:&quot;        if ($evt) {&quot;,&quot;213&quot;:&quot;            if ($sent == \\\\count($to) + \\\\count($cc) + \\\\count($bcc)) {&quot;,&quot;214&quot;:&quot;                $evt-&gt;setResult(Swift_Events_SendEvent::RESULT_SUCCESS);&quot;,&quot;215&quot;:&quot;            } elseif ($sent &gt; 0) {&quot;,&quot;216&quot;:&quot;                $evt-&gt;setResult(Swift_Events_SendEvent::RESULT_TENTATIVE);&quot;,&quot;217&quot;:&quot;            } else {&quot;,&quot;218&quot;:&quot;                $evt-&gt;setResult(Swift_Events_SendEvent::RESULT_FAILED);&quot;,&quot;219&quot;:&quot;            }&quot;,&quot;220&quot;:&quot;            $evt-&gt;setFailedRecipients($failedRecipients);&quot;,&quot;221&quot;:&quot;            $this-&gt;eventDispatcher-&gt;dispatchEvent($evt, &#039;sendPerformed&#039;);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Transport\/AbstractSmtpTransport.php&quot;},{&quot;line_number&quot;:71,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Swift_Mailer&quot;,&quot;code_snippet&quot;:{&quot;56&quot;:&quot;     *&quot;,&quot;57&quot;:&quot;     * @return int The number of successful recipients. Can be 0 which indicates failure&quot;,&quot;58&quot;:&quot;     *\/&quot;,&quot;59&quot;:&quot;    public function send(Swift_Mime_SimpleMessage $message, &amp;$failedRecipients = null)&quot;,&quot;60&quot;:&quot;    {&quot;,&quot;61&quot;:&quot;        $failedRecipients = (array) $failedRecipients;&quot;,&quot;62&quot;:&quot;&quot;,&quot;63&quot;:&quot;        \/\/ FIXME: to be removed in 7.0 (as transport must now start itself on send)&quot;,&quot;64&quot;:&quot;        if (!$this-&gt;transport-&gt;isStarted()) {&quot;,&quot;65&quot;:&quot;            $this-&gt;transport-&gt;start();&quot;,&quot;66&quot;:&quot;        }&quot;,&quot;67&quot;:&quot;&quot;,&quot;68&quot;:&quot;        $sent = 0;&quot;,&quot;69&quot;:&quot;&quot;,&quot;70&quot;:&quot;        try {&quot;,&quot;71&quot;:&quot;            $sent = $this-&gt;transport-&gt;send($message, $failedRecipients);&quot;,&quot;72&quot;:&quot;        } catch (Swift_RfcComplianceException $e) {&quot;,&quot;73&quot;:&quot;            foreach ($message-&gt;getTo() as $address =&gt; $name) {&quot;,&quot;74&quot;:&quot;                $failedRecipients[] = $address;&quot;,&quot;75&quot;:&quot;            }&quot;,&quot;76&quot;:&quot;        }&quot;,&quot;77&quot;:&quot;&quot;,&quot;78&quot;:&quot;        return $sent;&quot;,&quot;79&quot;:&quot;    }&quot;,&quot;80&quot;:&quot;&quot;,&quot;81&quot;:&quot;    \/**&quot;,&quot;82&quot;:&quot;     * Register a plugin using a known unique key (e.g. myPlugin).&quot;,&quot;83&quot;:&quot;     *\/&quot;,&quot;84&quot;:&quot;    public function registerPlugin(Swift_Events_EventListener $plugin)&quot;,&quot;85&quot;:&quot;    {&quot;,&quot;86&quot;:&quot;        $this-&gt;transport-&gt;registerPlugin($plugin);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Mailer.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/swiftmailer\/swiftmailer\/lib\/classes\/Swift\/Mailer.php&quot;},{&quot;line_number&quot;:521,&quot;method&quot;:&quot;sendSwiftMessage&quot;,&quot;class&quot;:&quot;Illuminate\\\\Mail\\\\Mailer&quot;,&quot;code_snippet&quot;:{&quot;506&quot;:&quot;&quot;,&quot;507&quot;:&quot;        return $message;&quot;,&quot;508&quot;:&quot;    }&quot;,&quot;509&quot;:&quot;&quot;,&quot;510&quot;:&quot;    \/**&quot;,&quot;511&quot;:&quot;     * Send a Swift Message instance.&quot;,&quot;512&quot;:&quot;     *&quot;,&quot;513&quot;:&quot;     * @param  \\\\Swift_Message  $message&quot;,&quot;514&quot;:&quot;     * @return int|null&quot;,&quot;515&quot;:&quot;     *\/&quot;,&quot;516&quot;:&quot;    protected function sendSwiftMessage($message)&quot;,&quot;517&quot;:&quot;    {&quot;,&quot;518&quot;:&quot;        $this-&gt;failedRecipients = [];&quot;,&quot;519&quot;:&quot;&quot;,&quot;520&quot;:&quot;        try {&quot;,&quot;521&quot;:&quot;            return $this-&gt;swift-&gt;send($message, $this-&gt;failedRecipients);&quot;,&quot;522&quot;:&quot;        } finally {&quot;,&quot;523&quot;:&quot;            $this-&gt;forceReconnection();&quot;,&quot;524&quot;:&quot;        }&quot;,&quot;525&quot;:&quot;    }&quot;,&quot;526&quot;:&quot;&quot;,&quot;527&quot;:&quot;    \/**&quot;,&quot;528&quot;:&quot;     * Determines if the message can be sent.&quot;,&quot;529&quot;:&quot;     *&quot;,&quot;530&quot;:&quot;     * @param  \\\\Swift_Message  $message&quot;,&quot;531&quot;:&quot;     * @param  array  $data&quot;,&quot;532&quot;:&quot;     * @return bool&quot;,&quot;533&quot;:&quot;     *\/&quot;,&quot;534&quot;:&quot;    protected function shouldSendMessage($message, $data = [])&quot;,&quot;535&quot;:&quot;    {&quot;,&quot;536&quot;:&quot;        if (! $this-&gt;events) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Mail\/Mailer.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Mail\/Mailer.php&quot;},{&quot;line_number&quot;:288,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Illuminate\\\\Mail\\\\Mailer&quot;,&quot;code_snippet&quot;:{&quot;273&quot;:&quot;        $this-&gt;addContent($message, $view, $plain, $raw, $data);&quot;,&quot;274&quot;:&quot;&quot;,&quot;275&quot;:&quot;        \/\/ If a global \\&quot;to\\&quot; address has been set, we will set that address on the mail&quot;,&quot;276&quot;:&quot;        \/\/ message. This is primarily useful during local development in which each&quot;,&quot;277&quot;:&quot;        \/\/ message should be delivered into a single mail address for inspection.&quot;,&quot;278&quot;:&quot;        if (isset($this-&gt;to[&#039;address&#039;])) {&quot;,&quot;279&quot;:&quot;            $this-&gt;setGlobalToAndRemoveCcAndBcc($message);&quot;,&quot;280&quot;:&quot;        }&quot;,&quot;281&quot;:&quot;&quot;,&quot;282&quot;:&quot;        \/\/ Next we will determine if the message should be sent. We give the developer&quot;,&quot;283&quot;:&quot;        \/\/ one final chance to stop this message and then we will send it to all of&quot;,&quot;284&quot;:&quot;        \/\/ its recipients. We will then fire the sent event for the sent message.&quot;,&quot;285&quot;:&quot;        $swiftMessage = $message-&gt;getSwiftMessage();&quot;,&quot;286&quot;:&quot;&quot;,&quot;287&quot;:&quot;        if ($this-&gt;shouldSendMessage($swiftMessage, $data)) {&quot;,&quot;288&quot;:&quot;            $this-&gt;sendSwiftMessage($swiftMessage);&quot;,&quot;289&quot;:&quot;&quot;,&quot;290&quot;:&quot;            $this-&gt;dispatchSentEvent($message, $data);&quot;,&quot;291&quot;:&quot;        }&quot;,&quot;292&quot;:&quot;    }&quot;,&quot;293&quot;:&quot;&quot;,&quot;294&quot;:&quot;    \/**&quot;,&quot;295&quot;:&quot;     * Send the given mailable.&quot;,&quot;296&quot;:&quot;     *&quot;,&quot;297&quot;:&quot;     * @param  \\\\Illuminate\\\\Contracts\\\\Mail\\\\Mailable  $mailable&quot;,&quot;298&quot;:&quot;     * @return mixed&quot;,&quot;299&quot;:&quot;     *\/&quot;,&quot;300&quot;:&quot;    protected function sendMailable(MailableContract $mailable)&quot;,&quot;301&quot;:&quot;    {&quot;,&quot;302&quot;:&quot;        return $mailable instanceof ShouldQueue&quot;,&quot;303&quot;:&quot;                        ? $mailable-&gt;mailer($this-&gt;name)-&gt;queue($this-&gt;queue)&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Mail\/Mailer.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Mail\/Mailer.php&quot;},{&quot;line_number&quot;:65,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\Channels\\\\MailChannel&quot;,&quot;code_snippet&quot;:{&quot;50&quot;:&quot;    {&quot;,&quot;51&quot;:&quot;        $message = $notification-&gt;toMail($notifiable);&quot;,&quot;52&quot;:&quot;&quot;,&quot;53&quot;:&quot;        if (! $notifiable-&gt;routeNotificationFor(&#039;mail&#039;, $notification) &amp;&amp;&quot;,&quot;54&quot;:&quot;            ! $message instanceof Mailable) {&quot;,&quot;55&quot;:&quot;            return;&quot;,&quot;56&quot;:&quot;        }&quot;,&quot;57&quot;:&quot;&quot;,&quot;58&quot;:&quot;        if ($message instanceof Mailable) {&quot;,&quot;59&quot;:&quot;            return $message-&gt;send($this-&gt;mailer);&quot;,&quot;60&quot;:&quot;        }&quot;,&quot;61&quot;:&quot;&quot;,&quot;62&quot;:&quot;        $this-&gt;mailer-&gt;mailer($message-&gt;mailer ?? null)-&gt;send(&quot;,&quot;63&quot;:&quot;            $this-&gt;buildView($message),&quot;,&quot;64&quot;:&quot;            array_merge($message-&gt;data(), $this-&gt;additionalMessageData($notification)),&quot;,&quot;65&quot;:&quot;            $this-&gt;messageBuilder($notifiable, $notification, $message)&quot;,&quot;66&quot;:&quot;        );&quot;,&quot;67&quot;:&quot;    }&quot;,&quot;68&quot;:&quot;&quot;,&quot;69&quot;:&quot;    \/**&quot;,&quot;70&quot;:&quot;     * Get the mailer Closure for the message.&quot;,&quot;71&quot;:&quot;     *&quot;,&quot;72&quot;:&quot;     * @param  mixed  $notifiable&quot;,&quot;73&quot;:&quot;     * @param  \\\\Illuminate\\\\Notifications\\\\Notification  $notification&quot;,&quot;74&quot;:&quot;     * @param  \\\\Illuminate\\\\Notifications\\\\Messages\\\\MailMessage  $message&quot;,&quot;75&quot;:&quot;     * @return \\\\Closure&quot;,&quot;76&quot;:&quot;     *\/&quot;,&quot;77&quot;:&quot;    protected function messageBuilder($notifiable, $notification, $message)&quot;,&quot;78&quot;:&quot;    {&quot;,&quot;79&quot;:&quot;        return function ($mailMessage) use ($notifiable, $notification, $message) {&quot;,&quot;80&quot;:&quot;            $this-&gt;buildMessage($mailMessage, $notifiable, $notification, $message);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/Channels\/MailChannel.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/Channels\/MailChannel.php&quot;},{&quot;line_number&quot;:148,&quot;method&quot;:&quot;sendToNotifiable&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\NotificationSender&quot;,&quot;code_snippet&quot;:{&quot;133&quot;:&quot;     * @param  string  $id&quot;,&quot;134&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;135&quot;:&quot;     * @param  string  $channel&quot;,&quot;136&quot;:&quot;     * @return void&quot;,&quot;137&quot;:&quot;     *\/&quot;,&quot;138&quot;:&quot;    protected function sendToNotifiable($notifiable, $id, $notification, $channel)&quot;,&quot;139&quot;:&quot;    {&quot;,&quot;140&quot;:&quot;        if (! $notification-&gt;id) {&quot;,&quot;141&quot;:&quot;            $notification-&gt;id = $id;&quot;,&quot;142&quot;:&quot;        }&quot;,&quot;143&quot;:&quot;&quot;,&quot;144&quot;:&quot;        if (! $this-&gt;shouldSendNotification($notifiable, $notification, $channel)) {&quot;,&quot;145&quot;:&quot;            return;&quot;,&quot;146&quot;:&quot;        }&quot;,&quot;147&quot;:&quot;&quot;,&quot;148&quot;:&quot;        $response = $this-&gt;manager-&gt;driver($channel)-&gt;send($notifiable, $notification);&quot;,&quot;149&quot;:&quot;&quot;,&quot;150&quot;:&quot;        $this-&gt;events-&gt;dispatch(&quot;,&quot;151&quot;:&quot;            new NotificationSent($notifiable, $notification, $channel, $response)&quot;,&quot;152&quot;:&quot;        );&quot;,&quot;153&quot;:&quot;    }&quot;,&quot;154&quot;:&quot;&quot;,&quot;155&quot;:&quot;    \/**&quot;,&quot;156&quot;:&quot;     * Determines if the notification can be sent.&quot;,&quot;157&quot;:&quot;     *&quot;,&quot;158&quot;:&quot;     * @param  mixed  $notifiable&quot;,&quot;159&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;160&quot;:&quot;     * @param  string  $channel&quot;,&quot;161&quot;:&quot;     * @return bool&quot;,&quot;162&quot;:&quot;     *\/&quot;,&quot;163&quot;:&quot;    protected function shouldSendNotification($notifiable, $notification, $channel)&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;},{&quot;line_number&quot;:106,&quot;method&quot;:&quot;Illuminate\\\\Notifications\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\NotificationSender&quot;,&quot;code_snippet&quot;:{&quot;91&quot;:&quot;    {&quot;,&quot;92&quot;:&quot;        $notifiables = $this-&gt;formatNotifiables($notifiables);&quot;,&quot;93&quot;:&quot;&quot;,&quot;94&quot;:&quot;        $original = clone $notification;&quot;,&quot;95&quot;:&quot;&quot;,&quot;96&quot;:&quot;        foreach ($notifiables as $notifiable) {&quot;,&quot;97&quot;:&quot;            if (empty($viaChannels = $channels ?: $notification-&gt;via($notifiable))) {&quot;,&quot;98&quot;:&quot;                continue;&quot;,&quot;99&quot;:&quot;            }&quot;,&quot;100&quot;:&quot;&quot;,&quot;101&quot;:&quot;            $this-&gt;withLocale($this-&gt;preferredLocale($notifiable, $notification), function () use ($viaChannels, $notifiable, $original) {&quot;,&quot;102&quot;:&quot;                $notificationId = Str::uuid()-&gt;toString();&quot;,&quot;103&quot;:&quot;&quot;,&quot;104&quot;:&quot;                foreach ((array) $viaChannels as $channel) {&quot;,&quot;105&quot;:&quot;                    if (! ($notifiable instanceof AnonymousNotifiable &amp;&amp; $channel === &#039;database&#039;)) {&quot;,&quot;106&quot;:&quot;                        $this-&gt;sendToNotifiable($notifiable, $notificationId, clone $original, $channel);&quot;,&quot;107&quot;:&quot;                    }&quot;,&quot;108&quot;:&quot;                }&quot;,&quot;109&quot;:&quot;            });&quot;,&quot;110&quot;:&quot;        }&quot;,&quot;111&quot;:&quot;    }&quot;,&quot;112&quot;:&quot;&quot;,&quot;113&quot;:&quot;    \/**&quot;,&quot;114&quot;:&quot;     * Get the notifiable&#039;s preferred locale for the notification.&quot;,&quot;115&quot;:&quot;     *&quot;,&quot;116&quot;:&quot;     * @param  mixed  $notifiable&quot;,&quot;117&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;118&quot;:&quot;     * @return string|null&quot;,&quot;119&quot;:&quot;     *\/&quot;,&quot;120&quot;:&quot;    protected function preferredLocale($notifiable, $notification)&quot;,&quot;121&quot;:&quot;    {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;},{&quot;line_number&quot;:19,&quot;method&quot;:&quot;withLocale&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\NotificationSender&quot;,&quot;code_snippet&quot;:{&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;use Illuminate\\\\Container\\\\Container;&quot;,&quot;6&quot;:&quot;&quot;,&quot;7&quot;:&quot;trait Localizable&quot;,&quot;8&quot;:&quot;{&quot;,&quot;9&quot;:&quot;    \/**&quot;,&quot;10&quot;:&quot;     * Run the callback with the given locale.&quot;,&quot;11&quot;:&quot;     *&quot;,&quot;12&quot;:&quot;     * @param  string  $locale&quot;,&quot;13&quot;:&quot;     * @param  \\\\Closure  $callback&quot;,&quot;14&quot;:&quot;     * @return mixed&quot;,&quot;15&quot;:&quot;     *\/&quot;,&quot;16&quot;:&quot;    public function withLocale($locale, $callback)&quot;,&quot;17&quot;:&quot;    {&quot;,&quot;18&quot;:&quot;        if (! $locale) {&quot;,&quot;19&quot;:&quot;            return $callback();&quot;,&quot;20&quot;:&quot;        }&quot;,&quot;21&quot;:&quot;&quot;,&quot;22&quot;:&quot;        $app = Container::getInstance();&quot;,&quot;23&quot;:&quot;&quot;,&quot;24&quot;:&quot;        $original = $app-&gt;getLocale();&quot;,&quot;25&quot;:&quot;&quot;,&quot;26&quot;:&quot;        try {&quot;,&quot;27&quot;:&quot;            $app-&gt;setLocale($locale);&quot;,&quot;28&quot;:&quot;&quot;,&quot;29&quot;:&quot;            return $callback();&quot;,&quot;30&quot;:&quot;        } finally {&quot;,&quot;31&quot;:&quot;            $app-&gt;setLocale($original);&quot;,&quot;32&quot;:&quot;        }&quot;,&quot;33&quot;:&quot;    }&quot;,&quot;34&quot;:&quot;}&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Support\/Traits\/Localizable.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Support\/Traits\/Localizable.php&quot;},{&quot;line_number&quot;:109,&quot;method&quot;:&quot;sendNow&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\NotificationSender&quot;,&quot;code_snippet&quot;:{&quot;94&quot;:&quot;        $original = clone $notification;&quot;,&quot;95&quot;:&quot;&quot;,&quot;96&quot;:&quot;        foreach ($notifiables as $notifiable) {&quot;,&quot;97&quot;:&quot;            if (empty($viaChannels = $channels ?: $notification-&gt;via($notifiable))) {&quot;,&quot;98&quot;:&quot;                continue;&quot;,&quot;99&quot;:&quot;            }&quot;,&quot;100&quot;:&quot;&quot;,&quot;101&quot;:&quot;            $this-&gt;withLocale($this-&gt;preferredLocale($notifiable, $notification), function () use ($viaChannels, $notifiable, $original) {&quot;,&quot;102&quot;:&quot;                $notificationId = Str::uuid()-&gt;toString();&quot;,&quot;103&quot;:&quot;&quot;,&quot;104&quot;:&quot;                foreach ((array) $viaChannels as $channel) {&quot;,&quot;105&quot;:&quot;                    if (! ($notifiable instanceof AnonymousNotifiable &amp;&amp; $channel === &#039;database&#039;)) {&quot;,&quot;106&quot;:&quot;                        $this-&gt;sendToNotifiable($notifiable, $notificationId, clone $original, $channel);&quot;,&quot;107&quot;:&quot;                    }&quot;,&quot;108&quot;:&quot;                }&quot;,&quot;109&quot;:&quot;            });&quot;,&quot;110&quot;:&quot;        }&quot;,&quot;111&quot;:&quot;    }&quot;,&quot;112&quot;:&quot;&quot;,&quot;113&quot;:&quot;    \/**&quot;,&quot;114&quot;:&quot;     * Get the notifiable&#039;s preferred locale for the notification.&quot;,&quot;115&quot;:&quot;     *&quot;,&quot;116&quot;:&quot;     * @param  mixed  $notifiable&quot;,&quot;117&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;118&quot;:&quot;     * @return string|null&quot;,&quot;119&quot;:&quot;     *\/&quot;,&quot;120&quot;:&quot;    protected function preferredLocale($notifiable, $notification)&quot;,&quot;121&quot;:&quot;    {&quot;,&quot;122&quot;:&quot;        return $notification-&gt;locale ?? $this-&gt;locale ?? value(function () use ($notifiable) {&quot;,&quot;123&quot;:&quot;            if ($notifiable instanceof HasLocalePreference) {&quot;,&quot;124&quot;:&quot;                return $notifiable-&gt;preferredLocale();&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;},{&quot;line_number&quot;:79,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\NotificationSender&quot;,&quot;code_snippet&quot;:{&quot;64&quot;:&quot;    \/**&quot;,&quot;65&quot;:&quot;     * Send the given notification to the given notifiable entities.&quot;,&quot;66&quot;:&quot;     *&quot;,&quot;67&quot;:&quot;     * @param  \\\\Illuminate\\\\Support\\\\Collection|array|mixed  $notifiables&quot;,&quot;68&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;69&quot;:&quot;     * @return void&quot;,&quot;70&quot;:&quot;     *\/&quot;,&quot;71&quot;:&quot;    public function send($notifiables, $notification)&quot;,&quot;72&quot;:&quot;    {&quot;,&quot;73&quot;:&quot;        $notifiables = $this-&gt;formatNotifiables($notifiables);&quot;,&quot;74&quot;:&quot;&quot;,&quot;75&quot;:&quot;        if ($notification instanceof ShouldQueue) {&quot;,&quot;76&quot;:&quot;            return $this-&gt;queueNotification($notifiables, $notification);&quot;,&quot;77&quot;:&quot;        }&quot;,&quot;78&quot;:&quot;&quot;,&quot;79&quot;:&quot;        return $this-&gt;sendNow($notifiables, $notification);&quot;,&quot;80&quot;:&quot;    }&quot;,&quot;81&quot;:&quot;&quot;,&quot;82&quot;:&quot;    \/**&quot;,&quot;83&quot;:&quot;     * Send the given notification immediately.&quot;,&quot;84&quot;:&quot;     *&quot;,&quot;85&quot;:&quot;     * @param  \\\\Illuminate\\\\Support\\\\Collection|array|mixed  $notifiables&quot;,&quot;86&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;87&quot;:&quot;     * @param  array|null  $channels&quot;,&quot;88&quot;:&quot;     * @return void&quot;,&quot;89&quot;:&quot;     *\/&quot;,&quot;90&quot;:&quot;    public function sendNow($notifiables, $notification, array $channels = null)&quot;,&quot;91&quot;:&quot;    {&quot;,&quot;92&quot;:&quot;        $notifiables = $this-&gt;formatNotifiables($notifiables);&quot;,&quot;93&quot;:&quot;&quot;,&quot;94&quot;:&quot;        $original = clone $notification;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/NotificationSender.php&quot;},{&quot;line_number&quot;:39,&quot;method&quot;:&quot;send&quot;,&quot;class&quot;:&quot;Illuminate\\\\Notifications\\\\ChannelManager&quot;,&quot;code_snippet&quot;:{&quot;24&quot;:&quot;     * @var string|null&quot;,&quot;25&quot;:&quot;     *\/&quot;,&quot;26&quot;:&quot;    protected $locale;&quot;,&quot;27&quot;:&quot;&quot;,&quot;28&quot;:&quot;    \/**&quot;,&quot;29&quot;:&quot;     * Send the given notification to the given notifiable entities.&quot;,&quot;30&quot;:&quot;     *&quot;,&quot;31&quot;:&quot;     * @param  \\\\Illuminate\\\\Support\\\\Collection|array|mixed  $notifiables&quot;,&quot;32&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;33&quot;:&quot;     * @return void&quot;,&quot;34&quot;:&quot;     *\/&quot;,&quot;35&quot;:&quot;    public function send($notifiables, $notification)&quot;,&quot;36&quot;:&quot;    {&quot;,&quot;37&quot;:&quot;        return (new NotificationSender(&quot;,&quot;38&quot;:&quot;            $this, $this-&gt;container-&gt;make(Bus::class), $this-&gt;container-&gt;make(Dispatcher::class), $this-&gt;locale)&quot;,&quot;39&quot;:&quot;        )-&gt;send($notifiables, $notification);&quot;,&quot;40&quot;:&quot;    }&quot;,&quot;41&quot;:&quot;&quot;,&quot;42&quot;:&quot;    \/**&quot;,&quot;43&quot;:&quot;     * Send the given notification immediately.&quot;,&quot;44&quot;:&quot;     *&quot;,&quot;45&quot;:&quot;     * @param  \\\\Illuminate\\\\Support\\\\Collection|array|mixed  $notifiables&quot;,&quot;46&quot;:&quot;     * @param  mixed  $notification&quot;,&quot;47&quot;:&quot;     * @param  array|null  $channels&quot;,&quot;48&quot;:&quot;     * @return void&quot;,&quot;49&quot;:&quot;     *\/&quot;,&quot;50&quot;:&quot;    public function sendNow($notifiables, $notification, array $channels = null)&quot;,&quot;51&quot;:&quot;    {&quot;,&quot;52&quot;:&quot;        return (new NotificationSender(&quot;,&quot;53&quot;:&quot;            $this, $this-&gt;container-&gt;make(Bus::class), $this-&gt;container-&gt;make(Dispatcher::class), $this-&gt;locale)&quot;,&quot;54&quot;:&quot;        )-&gt;sendNow($notifiables, $notification, $channels);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/ChannelManager.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/ChannelManager.php&quot;},{&quot;line_number&quot;:18,&quot;method&quot;:&quot;notify&quot;,&quot;class&quot;:&quot;App\\\\User&quot;,&quot;code_snippet&quot;:{&quot;3&quot;:&quot;namespace Illuminate\\\\Notifications;&quot;,&quot;4&quot;:&quot;&quot;,&quot;5&quot;:&quot;use Illuminate\\\\Contracts\\\\Notifications\\\\Dispatcher;&quot;,&quot;6&quot;:&quot;use Illuminate\\\\Support\\\\Str;&quot;,&quot;7&quot;:&quot;&quot;,&quot;8&quot;:&quot;trait RoutesNotifications&quot;,&quot;9&quot;:&quot;{&quot;,&quot;10&quot;:&quot;    \/**&quot;,&quot;11&quot;:&quot;     * Send the given notification.&quot;,&quot;12&quot;:&quot;     *&quot;,&quot;13&quot;:&quot;     * @param  mixed  $instance&quot;,&quot;14&quot;:&quot;     * @return void&quot;,&quot;15&quot;:&quot;     *\/&quot;,&quot;16&quot;:&quot;    public function notify($instance)&quot;,&quot;17&quot;:&quot;    {&quot;,&quot;18&quot;:&quot;        app(Dispatcher::class)-&gt;send($this, $instance);&quot;,&quot;19&quot;:&quot;    }&quot;,&quot;20&quot;:&quot;&quot;,&quot;21&quot;:&quot;    \/**&quot;,&quot;22&quot;:&quot;     * Send the given notification immediately.&quot;,&quot;23&quot;:&quot;     *&quot;,&quot;24&quot;:&quot;     * @param  mixed  $instance&quot;,&quot;25&quot;:&quot;     * @param  array|null  $channels&quot;,&quot;26&quot;:&quot;     * @return void&quot;,&quot;27&quot;:&quot;     *\/&quot;,&quot;28&quot;:&quot;    public function notifyNow($instance, array $channels = null)&quot;,&quot;29&quot;:&quot;    {&quot;,&quot;30&quot;:&quot;        app(Dispatcher::class)-&gt;sendNow($this, $instance, $channels);&quot;,&quot;31&quot;:&quot;    }&quot;,&quot;32&quot;:&quot;&quot;,&quot;33&quot;:&quot;    \/**&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/RoutesNotifications.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Notifications\/RoutesNotifications.php&quot;},{&quot;line_number&quot;:533,&quot;method&quot;:&quot;makeRestaurantActive&quot;,&quot;class&quot;:&quot;App\\\\Http\\\\Controllers\\\\RestorantController&quot;,&quot;code_snippet&quot;:{&quot;518&quot;:&quot;        $restaurant-&gt;subdomain = $this-&gt;makeAlias($restaurant-&gt;name);&quot;,&quot;519&quot;:&quot;        $restaurant-&gt;update();&quot;,&quot;520&quot;:&quot;&quot;,&quot;521&quot;:&quot;        $owner = $restaurant-&gt;user;&quot;,&quot;522&quot;:&quot;&quot;,&quot;523&quot;:&quot;        \/\/if the restaurant is first time activated&quot;,&quot;524&quot;:&quot;        if ($owner-&gt;password == null) {&quot;,&quot;525&quot;:&quot;            \/\/Activate the owner&quot;,&quot;526&quot;:&quot;            $generatedPassword = Str::random(10);&quot;,&quot;527&quot;:&quot;&quot;,&quot;528&quot;:&quot;            $owner-&gt;password = Hash::make($generatedPassword);&quot;,&quot;529&quot;:&quot;            $owner-&gt;active = 1;&quot;,&quot;530&quot;:&quot;            $owner-&gt;update();&quot;,&quot;531&quot;:&quot;&quot;,&quot;532&quot;:&quot;            \/\/Send email to the user\/owner&quot;,&quot;533&quot;:&quot;            $owner-&gt;notify(new RestaurantCreated($generatedPassword, $restaurant, $owner));&quot;,&quot;534&quot;:&quot;        }&quot;,&quot;535&quot;:&quot;    }&quot;,&quot;536&quot;:&quot;&quot;,&quot;537&quot;:&quot;    public function activateRestaurant(Restorant $restaurant)&quot;,&quot;538&quot;:&quot;    {&quot;,&quot;539&quot;:&quot;        $this-&gt;makeRestaurantActive($restaurant);&quot;,&quot;540&quot;:&quot;&quot;,&quot;541&quot;:&quot;        return redirect()-&gt;route(&#039;admin.restaurants.index&#039;)-&gt;withStatus(__(&#039;Restaurant successfully activated.&#039;));&quot;,&quot;542&quot;:&quot;    }&quot;,&quot;543&quot;:&quot;&quot;,&quot;544&quot;:&quot;    public function restaurantslocations()&quot;,&quot;545&quot;:&quot;    {&quot;,&quot;546&quot;:&quot;        \/\/TODO - Method for admin onlt&quot;,&quot;547&quot;:&quot;        if (! auth()-&gt;user()-&gt;hasRole(&#039;admin&#039;)) {&quot;,&quot;548&quot;:&quot;            dd(&#039;Not allowed&#039;);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/app\/Http\/Controllers\/RestorantController.php&quot;,&quot;is_application_frame&quot;:true,&quot;relative_file&quot;:&quot;app\/Http\/Controllers\/RestorantController.php&quot;},{&quot;line_number&quot;:505,&quot;method&quot;:&quot;storeRegisterRestaurant&quot;,&quot;class&quot;:&quot;App\\\\Http\\\\Controllers\\\\RestorantController&quot;,&quot;code_snippet&quot;:{&quot;490&quot;:&quot;        $restaurant-&gt;user_id = $owner-&gt;id;&quot;,&quot;491&quot;:&quot;        $restaurant-&gt;description = strip_tags($request-&gt;description.&#039;&#039;);&quot;,&quot;492&quot;:&quot;        $restaurant-&gt;minimum = $request-&gt;minimum | 0;&quot;,&quot;493&quot;:&quot;        $restaurant-&gt;lat = 0;&quot;,&quot;494&quot;:&quot;        $restaurant-&gt;lng = 0;&quot;,&quot;495&quot;:&quot;        $restaurant-&gt;address = &#039;&#039;;&quot;,&quot;496&quot;:&quot;        $restaurant-&gt;phone = $owner-&gt;phone;&quot;,&quot;497&quot;:&quot;        \/\/$restaurant-&gt;subdomain=strtolower(preg_replace(&#039;\/[^A-Za-z0-9]\/&#039;, &#039;&#039;, strip_tags($request-&gt;name)));&quot;,&quot;498&quot;:&quot;        $restaurant-&gt;active = 0;&quot;,&quot;499&quot;:&quot;        $restaurant-&gt;subdomain = null;&quot;,&quot;500&quot;:&quot;        \/\/$restaurant-&gt;logo = \\&quot;\\&quot;;&quot;,&quot;501&quot;:&quot;        $restaurant-&gt;save();&quot;,&quot;502&quot;:&quot;&quot;,&quot;503&quot;:&quot;        if (config(&#039;app.isqrsaas&#039;) || config(&#039;settings.directly_approve_resstaurant&#039;)) {&quot;,&quot;504&quot;:&quot;            \/\/QR SaaS - or directly approve&quot;,&quot;505&quot;:&quot;            $this-&gt;makeRestaurantActive($restaurant);&quot;,&quot;506&quot;:&quot;&quot;,&quot;507&quot;:&quot;            return redirect()-&gt;route(&#039;front&#039;)-&gt;withStatus(__(&#039;notications.thanks_andcheckemail&#039;));&quot;,&quot;508&quot;:&quot;        } else {&quot;,&quot;509&quot;:&quot;            \/\/Foodtiger&quot;,&quot;510&quot;:&quot;            return redirect()-&gt;route(&#039;newrestaurant.register&#039;)-&gt;withStatus(__(&#039;notications.thanks_and_review&#039;));&quot;,&quot;511&quot;:&quot;        }&quot;,&quot;512&quot;:&quot;    }&quot;,&quot;513&quot;:&quot;&quot;,&quot;514&quot;:&quot;    private function makeRestaurantActive(Restorant $restaurant)&quot;,&quot;515&quot;:&quot;    {&quot;,&quot;516&quot;:&quot;        \/\/Activate the restaurant&quot;,&quot;517&quot;:&quot;        $restaurant-&gt;active = 1;&quot;,&quot;518&quot;:&quot;        $restaurant-&gt;subdomain = $this-&gt;makeAlias($restaurant-&gt;name);&quot;,&quot;519&quot;:&quot;        $restaurant-&gt;update();&quot;,&quot;520&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/app\/Http\/Controllers\/RestorantController.php&quot;,&quot;is_application_frame&quot;:true,&quot;relative_file&quot;:&quot;app\/Http\/Controllers\/RestorantController.php&quot;},{&quot;line_number&quot;:54,&quot;method&quot;:&quot;callAction&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Controller&quot;,&quot;code_snippet&quot;:{&quot;39&quot;:&quot;     *\/&quot;,&quot;40&quot;:&quot;    public function getMiddleware()&quot;,&quot;41&quot;:&quot;    {&quot;,&quot;42&quot;:&quot;        return $this-&gt;middleware;&quot;,&quot;43&quot;:&quot;    }&quot;,&quot;44&quot;:&quot;&quot;,&quot;45&quot;:&quot;    \/**&quot;,&quot;46&quot;:&quot;     * Execute an action on the controller.&quot;,&quot;47&quot;:&quot;     *&quot;,&quot;48&quot;:&quot;     * @param  string  $method&quot;,&quot;49&quot;:&quot;     * @param  array  $parameters&quot;,&quot;50&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;51&quot;:&quot;     *\/&quot;,&quot;52&quot;:&quot;    public function callAction($method, $parameters)&quot;,&quot;53&quot;:&quot;    {&quot;,&quot;54&quot;:&quot;        return $this-&gt;{$method}(...array_values($parameters));&quot;,&quot;55&quot;:&quot;    }&quot;,&quot;56&quot;:&quot;&quot;,&quot;57&quot;:&quot;    \/**&quot;,&quot;58&quot;:&quot;     * Handle calls to missing methods on the controller.&quot;,&quot;59&quot;:&quot;     *&quot;,&quot;60&quot;:&quot;     * @param  string  $method&quot;,&quot;61&quot;:&quot;     * @param  array  $parameters&quot;,&quot;62&quot;:&quot;     * @return mixed&quot;,&quot;63&quot;:&quot;     *&quot;,&quot;64&quot;:&quot;     * @throws \\\\BadMethodCallException&quot;,&quot;65&quot;:&quot;     *\/&quot;,&quot;66&quot;:&quot;    public function __call($method, $parameters)&quot;,&quot;67&quot;:&quot;    {&quot;,&quot;68&quot;:&quot;        throw new BadMethodCallException(sprintf(&quot;,&quot;69&quot;:&quot;            &#039;Method %s::%s does not exist.&#039;, static::class, $method&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Controller.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Controller.php&quot;},{&quot;line_number&quot;:45,&quot;method&quot;:&quot;dispatch&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\ControllerDispatcher&quot;,&quot;code_snippet&quot;:{&quot;30&quot;:&quot;    \/**&quot;,&quot;31&quot;:&quot;     * Dispatch a request to a given controller and method.&quot;,&quot;32&quot;:&quot;     *&quot;,&quot;33&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Route  $route&quot;,&quot;34&quot;:&quot;     * @param  mixed  $controller&quot;,&quot;35&quot;:&quot;     * @param  string  $method&quot;,&quot;36&quot;:&quot;     * @return mixed&quot;,&quot;37&quot;:&quot;     *\/&quot;,&quot;38&quot;:&quot;    public function dispatch(Route $route, $controller, $method)&quot;,&quot;39&quot;:&quot;    {&quot;,&quot;40&quot;:&quot;        $parameters = $this-&gt;resolveClassMethodDependencies(&quot;,&quot;41&quot;:&quot;            $route-&gt;parametersWithoutNulls(), $controller, $method&quot;,&quot;42&quot;:&quot;        );&quot;,&quot;43&quot;:&quot;&quot;,&quot;44&quot;:&quot;        if (method_exists($controller, &#039;callAction&#039;)) {&quot;,&quot;45&quot;:&quot;            return $controller-&gt;callAction($method, $parameters);&quot;,&quot;46&quot;:&quot;        }&quot;,&quot;47&quot;:&quot;&quot;,&quot;48&quot;:&quot;        return $controller-&gt;{$method}(...array_values($parameters));&quot;,&quot;49&quot;:&quot;    }&quot;,&quot;50&quot;:&quot;&quot;,&quot;51&quot;:&quot;    \/**&quot;,&quot;52&quot;:&quot;     * Get the middleware for the controller instance.&quot;,&quot;53&quot;:&quot;     *&quot;,&quot;54&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Controller  $controller&quot;,&quot;55&quot;:&quot;     * @param  string  $method&quot;,&quot;56&quot;:&quot;     * @return array&quot;,&quot;57&quot;:&quot;     *\/&quot;,&quot;58&quot;:&quot;    public function getMiddleware($controller, $method)&quot;,&quot;59&quot;:&quot;    {&quot;,&quot;60&quot;:&quot;        if (! method_exists($controller, &#039;getMiddleware&#039;)) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/ControllerDispatcher.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/ControllerDispatcher.php&quot;},{&quot;line_number&quot;:254,&quot;method&quot;:&quot;runController&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Route&quot;,&quot;code_snippet&quot;:{&quot;239&quot;:&quot;    protected function isSerializedClosure()&quot;,&quot;240&quot;:&quot;    {&quot;,&quot;241&quot;:&quot;        return RouteAction::containsSerializedClosure($this-&gt;action);&quot;,&quot;242&quot;:&quot;    }&quot;,&quot;243&quot;:&quot;&quot;,&quot;244&quot;:&quot;    \/**&quot;,&quot;245&quot;:&quot;     * Run the route action and return the response.&quot;,&quot;246&quot;:&quot;     *&quot;,&quot;247&quot;:&quot;     * @return mixed&quot;,&quot;248&quot;:&quot;     *&quot;,&quot;249&quot;:&quot;     * @throws \\\\Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException&quot;,&quot;250&quot;:&quot;     *\/&quot;,&quot;251&quot;:&quot;    protected function runController()&quot;,&quot;252&quot;:&quot;    {&quot;,&quot;253&quot;:&quot;        return $this-&gt;controllerDispatcher()-&gt;dispatch(&quot;,&quot;254&quot;:&quot;            $this, $this-&gt;getController(), $this-&gt;getControllerMethod()&quot;,&quot;255&quot;:&quot;        );&quot;,&quot;256&quot;:&quot;    }&quot;,&quot;257&quot;:&quot;&quot;,&quot;258&quot;:&quot;    \/**&quot;,&quot;259&quot;:&quot;     * Get the controller instance for the route.&quot;,&quot;260&quot;:&quot;     *&quot;,&quot;261&quot;:&quot;     * @return mixed&quot;,&quot;262&quot;:&quot;     *\/&quot;,&quot;263&quot;:&quot;    public function getController()&quot;,&quot;264&quot;:&quot;    {&quot;,&quot;265&quot;:&quot;        if (! $this-&gt;controller) {&quot;,&quot;266&quot;:&quot;            $class = $this-&gt;parseControllerCallback()[0];&quot;,&quot;267&quot;:&quot;&quot;,&quot;268&quot;:&quot;            $this-&gt;controller = $this-&gt;container-&gt;make(ltrim($class, &#039;\\\\\\\\&#039;));&quot;,&quot;269&quot;:&quot;        }&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php&quot;},{&quot;line_number&quot;:197,&quot;method&quot;:&quot;run&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Route&quot;,&quot;code_snippet&quot;:{&quot;182&quot;:&quot;    {&quot;,&quot;183&quot;:&quot;        return RouteAction::parse($this-&gt;uri, $action);&quot;,&quot;184&quot;:&quot;    }&quot;,&quot;185&quot;:&quot;&quot;,&quot;186&quot;:&quot;    \/**&quot;,&quot;187&quot;:&quot;     * Run the route action and return the response.&quot;,&quot;188&quot;:&quot;     *&quot;,&quot;189&quot;:&quot;     * @return mixed&quot;,&quot;190&quot;:&quot;     *\/&quot;,&quot;191&quot;:&quot;    public function run()&quot;,&quot;192&quot;:&quot;    {&quot;,&quot;193&quot;:&quot;        $this-&gt;container = $this-&gt;container ?: new Container;&quot;,&quot;194&quot;:&quot;&quot;,&quot;195&quot;:&quot;        try {&quot;,&quot;196&quot;:&quot;            if ($this-&gt;isControllerAction()) {&quot;,&quot;197&quot;:&quot;                return $this-&gt;runController();&quot;,&quot;198&quot;:&quot;            }&quot;,&quot;199&quot;:&quot;&quot;,&quot;200&quot;:&quot;            return $this-&gt;runCallable();&quot;,&quot;201&quot;:&quot;        } catch (HttpResponseException $e) {&quot;,&quot;202&quot;:&quot;            return $e-&gt;getResponse();&quot;,&quot;203&quot;:&quot;        }&quot;,&quot;204&quot;:&quot;    }&quot;,&quot;205&quot;:&quot;&quot;,&quot;206&quot;:&quot;    \/**&quot;,&quot;207&quot;:&quot;     * Checks whether the route&#039;s action is a controller.&quot;,&quot;208&quot;:&quot;     *&quot;,&quot;209&quot;:&quot;     * @return bool&quot;,&quot;210&quot;:&quot;     *\/&quot;,&quot;211&quot;:&quot;    protected function isControllerAction()&quot;,&quot;212&quot;:&quot;    {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php&quot;},{&quot;line_number&quot;:692,&quot;method&quot;:&quot;Illuminate\\\\Routing\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Router&quot;,&quot;code_snippet&quot;:{&quot;677&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;678&quot;:&quot;     * @return mixed&quot;,&quot;679&quot;:&quot;     *\/&quot;,&quot;680&quot;:&quot;    protected function runRouteWithinStack(Route $route, Request $request)&quot;,&quot;681&quot;:&quot;    {&quot;,&quot;682&quot;:&quot;        $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;&quot;,&quot;683&quot;:&quot;                                $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;&quot;,&quot;684&quot;:&quot;&quot;,&quot;685&quot;:&quot;        $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);&quot;,&quot;686&quot;:&quot;&quot;,&quot;687&quot;:&quot;        return (new Pipeline($this-&gt;container))&quot;,&quot;688&quot;:&quot;                        -&gt;send($request)&quot;,&quot;689&quot;:&quot;                        -&gt;through($middleware)&quot;,&quot;690&quot;:&quot;                        -&gt;then(function ($request) use ($route) {&quot;,&quot;691&quot;:&quot;                            return $this-&gt;prepareResponse(&quot;,&quot;692&quot;:&quot;                                $request, $route-&gt;run()&quot;,&quot;693&quot;:&quot;                            );&quot;,&quot;694&quot;:&quot;                        });&quot;,&quot;695&quot;:&quot;    }&quot;,&quot;696&quot;:&quot;&quot;,&quot;697&quot;:&quot;    \/**&quot;,&quot;698&quot;:&quot;     * Gather the middleware for the given route with resolved class names.&quot;,&quot;699&quot;:&quot;     *&quot;,&quot;700&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Route  $route&quot;,&quot;701&quot;:&quot;     * @return array&quot;,&quot;702&quot;:&quot;     *\/&quot;,&quot;703&quot;:&quot;    public function gatherRouteMiddleware(Route $route)&quot;,&quot;704&quot;:&quot;    {&quot;,&quot;705&quot;:&quot;        $excluded = collect($route-&gt;excludedMiddleware())-&gt;map(function ($name) {&quot;,&quot;706&quot;:&quot;            return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);&quot;,&quot;707&quot;:&quot;        })-&gt;flatten()-&gt;values()-&gt;all();&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;},{&quot;line_number&quot;:128,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;113&quot;:&quot;        return $this-&gt;then(function ($passable) {&quot;,&quot;114&quot;:&quot;            return $passable;&quot;,&quot;115&quot;:&quot;        });&quot;,&quot;116&quot;:&quot;    }&quot;,&quot;117&quot;:&quot;&quot;,&quot;118&quot;:&quot;    \/**&quot;,&quot;119&quot;:&quot;     * Get the final piece of the Closure onion.&quot;,&quot;120&quot;:&quot;     *&quot;,&quot;121&quot;:&quot;     * @param  \\\\Closure  $destination&quot;,&quot;122&quot;:&quot;     * @return \\\\Closure&quot;,&quot;123&quot;:&quot;     *\/&quot;,&quot;124&quot;:&quot;    protected function prepareDestination(Closure $destination)&quot;,&quot;125&quot;:&quot;    {&quot;,&quot;126&quot;:&quot;        return function ($passable) use ($destination) {&quot;,&quot;127&quot;:&quot;            try {&quot;,&quot;128&quot;:&quot;                return $destination($passable);&quot;,&quot;129&quot;:&quot;            } catch (Throwable $e) {&quot;,&quot;130&quot;:&quot;                return $this-&gt;handleException($passable, $e);&quot;,&quot;131&quot;:&quot;            }&quot;,&quot;132&quot;:&quot;        };&quot;,&quot;133&quot;:&quot;    }&quot;,&quot;134&quot;:&quot;&quot;,&quot;135&quot;:&quot;    \/**&quot;,&quot;136&quot;:&quot;     * Get a Closure that represents a slice of the application onion.&quot;,&quot;137&quot;:&quot;     *&quot;,&quot;138&quot;:&quot;     * @return \\\\Closure&quot;,&quot;139&quot;:&quot;     *\/&quot;,&quot;140&quot;:&quot;    protected function carry()&quot;,&quot;141&quot;:&quot;    {&quot;,&quot;142&quot;:&quot;        return function ($stack, $pipe) {&quot;,&quot;143&quot;:&quot;            return function ($passable) use ($stack, $pipe) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:41,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Middleware\\\\SubstituteBindings&quot;,&quot;code_snippet&quot;:{&quot;14&quot;:&quot;     *\/&quot;,&quot;15&quot;:&quot;    protected $router;&quot;,&quot;16&quot;:&quot;&quot;,&quot;17&quot;:&quot;    \/**&quot;,&quot;18&quot;:&quot;     * Create a new bindings substitutor.&quot;,&quot;19&quot;:&quot;     *&quot;,&quot;20&quot;:&quot;     * @param  \\\\Illuminate\\\\Contracts\\\\Routing\\\\Registrar  $router&quot;,&quot;21&quot;:&quot;     * @return void&quot;,&quot;22&quot;:&quot;     *\/&quot;,&quot;23&quot;:&quot;    public function __construct(Registrar $router)&quot;,&quot;24&quot;:&quot;    {&quot;,&quot;25&quot;:&quot;        $this-&gt;router = $router;&quot;,&quot;26&quot;:&quot;    }&quot;,&quot;27&quot;:&quot;&quot;,&quot;28&quot;:&quot;    \/**&quot;,&quot;29&quot;:&quot;     * Handle an incoming request.&quot;,&quot;30&quot;:&quot;     *&quot;,&quot;31&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;32&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;33&quot;:&quot;     * @return mixed&quot;,&quot;34&quot;:&quot;     *\/&quot;,&quot;35&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;36&quot;:&quot;    {&quot;,&quot;37&quot;:&quot;        $this-&gt;router-&gt;substituteBindings($route = $request-&gt;route());&quot;,&quot;38&quot;:&quot;&quot;,&quot;39&quot;:&quot;        $this-&gt;router-&gt;substituteImplicitBindings($route);&quot;,&quot;40&quot;:&quot;&quot;,&quot;41&quot;:&quot;        return $next($request);&quot;,&quot;42&quot;:&quot;    }&quot;,&quot;43&quot;:&quot;}&quot;,&quot;44&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Middleware\/SubstituteBindings.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Middleware\/SubstituteBindings.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:78,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\VerifyCsrfToken&quot;,&quot;code_snippet&quot;:{&quot;63&quot;:&quot;     *&quot;,&quot;64&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;65&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;66&quot;:&quot;     * @return mixed&quot;,&quot;67&quot;:&quot;     *&quot;,&quot;68&quot;:&quot;     * @throws \\\\Illuminate\\\\Session\\\\TokenMismatchException&quot;,&quot;69&quot;:&quot;     *\/&quot;,&quot;70&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;71&quot;:&quot;    {&quot;,&quot;72&quot;:&quot;        if (&quot;,&quot;73&quot;:&quot;            $this-&gt;isReading($request) ||&quot;,&quot;74&quot;:&quot;            $this-&gt;runningUnitTests() ||&quot;,&quot;75&quot;:&quot;            $this-&gt;inExceptArray($request) ||&quot;,&quot;76&quot;:&quot;            $this-&gt;tokensMatch($request)&quot;,&quot;77&quot;:&quot;        ) {&quot;,&quot;78&quot;:&quot;            return tap($next($request), function ($response) use ($request) {&quot;,&quot;79&quot;:&quot;                if ($this-&gt;shouldAddXsrfTokenCookie()) {&quot;,&quot;80&quot;:&quot;                    $this-&gt;addCookieToResponse($request, $response);&quot;,&quot;81&quot;:&quot;                }&quot;,&quot;82&quot;:&quot;            });&quot;,&quot;83&quot;:&quot;        }&quot;,&quot;84&quot;:&quot;&quot;,&quot;85&quot;:&quot;        throw new TokenMismatchException(&#039;CSRF token mismatch.&#039;);&quot;,&quot;86&quot;:&quot;    }&quot;,&quot;87&quot;:&quot;&quot;,&quot;88&quot;:&quot;    \/**&quot;,&quot;89&quot;:&quot;     * Determine if the HTTP request uses a &lsquo;read&rsquo; verb.&quot;,&quot;90&quot;:&quot;     *&quot;,&quot;91&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;92&quot;:&quot;     * @return bool&quot;,&quot;93&quot;:&quot;     *\/&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/VerifyCsrfToken.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/VerifyCsrfToken.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:49,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\View\\\\Middleware\\\\ShareErrorsFromSession&quot;,&quot;code_snippet&quot;:{&quot;22&quot;:&quot;     * @return void&quot;,&quot;23&quot;:&quot;     *\/&quot;,&quot;24&quot;:&quot;    public function __construct(ViewFactory $view)&quot;,&quot;25&quot;:&quot;    {&quot;,&quot;26&quot;:&quot;        $this-&gt;view = $view;&quot;,&quot;27&quot;:&quot;    }&quot;,&quot;28&quot;:&quot;&quot;,&quot;29&quot;:&quot;    \/**&quot;,&quot;30&quot;:&quot;     * Handle an incoming request.&quot;,&quot;31&quot;:&quot;     *&quot;,&quot;32&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;33&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;34&quot;:&quot;     * @return mixed&quot;,&quot;35&quot;:&quot;     *\/&quot;,&quot;36&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;37&quot;:&quot;    {&quot;,&quot;38&quot;:&quot;        \/\/ If the current session has an \\&quot;errors\\&quot; variable bound to it, we will share&quot;,&quot;39&quot;:&quot;        \/\/ its value with all view instances so the views can easily access errors&quot;,&quot;40&quot;:&quot;        \/\/ without having to bind. An empty bag is set when there aren&#039;t errors.&quot;,&quot;41&quot;:&quot;        $this-&gt;view-&gt;share(&quot;,&quot;42&quot;:&quot;            &#039;errors&#039;, $request-&gt;session()-&gt;get(&#039;errors&#039;) ?: new ViewErrorBag&quot;,&quot;43&quot;:&quot;        );&quot;,&quot;44&quot;:&quot;&quot;,&quot;45&quot;:&quot;        \/\/ Putting the errors in the view for every view allows the developer to just&quot;,&quot;46&quot;:&quot;        \/\/ assume that some errors are always available, which is convenient since&quot;,&quot;47&quot;:&quot;        \/\/ they don&#039;t have to continually run checks for the presence of errors.&quot;,&quot;48&quot;:&quot;&quot;,&quot;49&quot;:&quot;        return $next($request);&quot;,&quot;50&quot;:&quot;    }&quot;,&quot;51&quot;:&quot;}&quot;,&quot;52&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/View\/Middleware\/ShareErrorsFromSession.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/View\/Middleware\/ShareErrorsFromSession.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:32,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;App\\\\Http\\\\Middleware\\\\Language&quot;,&quot;code_snippet&quot;:{&quot;5&quot;:&quot;use Closure;&quot;,&quot;6&quot;:&quot;use Illuminate\\\\Foundation\\\\Application;&quot;,&quot;7&quot;:&quot;use Illuminate\\\\Http\\\\Request;&quot;,&quot;8&quot;:&quot;use Illuminate\\\\Routing\\\\Redirector;&quot;,&quot;9&quot;:&quot;use Illuminate\\\\Support\\\\Facades\\\\App;&quot;,&quot;10&quot;:&quot;use Illuminate\\\\Support\\\\Facades\\\\Config;&quot;,&quot;11&quot;:&quot;use Illuminate\\\\Support\\\\Facades\\\\Cookie;&quot;,&quot;12&quot;:&quot;use Illuminate\\\\Support\\\\Facades\\\\Session;&quot;,&quot;13&quot;:&quot;&quot;,&quot;14&quot;:&quot;class Language&quot;,&quot;15&quot;:&quot;{&quot;,&quot;16&quot;:&quot;    \/**&quot;,&quot;17&quot;:&quot;     * Handle an incoming request.&quot;,&quot;18&quot;:&quot;     *&quot;,&quot;19&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;20&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;21&quot;:&quot;     * @return mixed&quot;,&quot;22&quot;:&quot;     *\/&quot;,&quot;23&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;24&quot;:&quot;    {&quot;,&quot;25&quot;:&quot;        $activeLanguage = session(&#039;applocale_change&#039;);&quot;,&quot;26&quot;:&quot;        \/\/dd($activeLanguage);&quot;,&quot;27&quot;:&quot;        if ($activeLanguage) {&quot;,&quot;28&quot;:&quot;            App::setLocale(strtolower($activeLanguage));&quot;,&quot;29&quot;:&quot;        } else {&quot;,&quot;30&quot;:&quot;        }&quot;,&quot;31&quot;:&quot;&quot;,&quot;32&quot;:&quot;        return $next($request);&quot;,&quot;33&quot;:&quot;    }&quot;,&quot;34&quot;:&quot;}&quot;,&quot;35&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/app\/Http\/Middleware\/Language.php&quot;,&quot;is_application_frame&quot;:true,&quot;relative_file&quot;:&quot;app\/Http\/Middleware\/Language.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:121,&quot;method&quot;:&quot;handleStatefulRequest&quot;,&quot;class&quot;:&quot;Illuminate\\\\Session\\\\Middleware\\\\StartSession&quot;,&quot;code_snippet&quot;:{&quot;106&quot;:&quot;     * @param  \\\\Illuminate\\\\Contracts\\\\Session\\\\Session  $session&quot;,&quot;107&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;108&quot;:&quot;     * @return mixed&quot;,&quot;109&quot;:&quot;     *\/&quot;,&quot;110&quot;:&quot;    protected function handleStatefulRequest(Request $request, $session, Closure $next)&quot;,&quot;111&quot;:&quot;    {&quot;,&quot;112&quot;:&quot;        \/\/ If a session driver has been configured, we will need to start the session here&quot;,&quot;113&quot;:&quot;        \/\/ so that the data is ready for an application. Note that the Laravel sessions&quot;,&quot;114&quot;:&quot;        \/\/ do not make use of PHP \\&quot;native\\&quot; sessions in any way since they are crappy.&quot;,&quot;115&quot;:&quot;        $request-&gt;setLaravelSession(&quot;,&quot;116&quot;:&quot;            $this-&gt;startSession($request, $session)&quot;,&quot;117&quot;:&quot;        );&quot;,&quot;118&quot;:&quot;&quot;,&quot;119&quot;:&quot;        $this-&gt;collectGarbage($session);&quot;,&quot;120&quot;:&quot;&quot;,&quot;121&quot;:&quot;        $response = $next($request);&quot;,&quot;122&quot;:&quot;&quot;,&quot;123&quot;:&quot;        $this-&gt;storeCurrentUrl($request, $session);&quot;,&quot;124&quot;:&quot;&quot;,&quot;125&quot;:&quot;        $this-&gt;addCookieToResponse($response, $session);&quot;,&quot;126&quot;:&quot;&quot;,&quot;127&quot;:&quot;        \/\/ Again, if the session has been configured we will need to close out the session&quot;,&quot;128&quot;:&quot;        \/\/ so that the attributes may be persisted to some storage medium. We will also&quot;,&quot;129&quot;:&quot;        \/\/ add the session identifier cookie to the application response headers now.&quot;,&quot;130&quot;:&quot;        $this-&gt;saveSession($request);&quot;,&quot;131&quot;:&quot;&quot;,&quot;132&quot;:&quot;        return $response;&quot;,&quot;133&quot;:&quot;    }&quot;,&quot;134&quot;:&quot;&quot;,&quot;135&quot;:&quot;    \/**&quot;,&quot;136&quot;:&quot;     * Start the session for the given request.&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php&quot;},{&quot;line_number&quot;:63,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Session\\\\Middleware\\\\StartSession&quot;,&quot;code_snippet&quot;:{&quot;48&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;49&quot;:&quot;     * @return mixed&quot;,&quot;50&quot;:&quot;     *\/&quot;,&quot;51&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;52&quot;:&quot;    {&quot;,&quot;53&quot;:&quot;        if (! $this-&gt;sessionConfigured()) {&quot;,&quot;54&quot;:&quot;            return $next($request);&quot;,&quot;55&quot;:&quot;        }&quot;,&quot;56&quot;:&quot;&quot;,&quot;57&quot;:&quot;        $session = $this-&gt;getSession($request);&quot;,&quot;58&quot;:&quot;&quot;,&quot;59&quot;:&quot;        if ($this-&gt;manager-&gt;shouldBlock() ||&quot;,&quot;60&quot;:&quot;            ($request-&gt;route() instanceof Route &amp;&amp; $request-&gt;route()-&gt;locksFor())) {&quot;,&quot;61&quot;:&quot;            return $this-&gt;handleRequestWhileBlocking($request, $session, $next);&quot;,&quot;62&quot;:&quot;        } else {&quot;,&quot;63&quot;:&quot;            return $this-&gt;handleStatefulRequest($request, $session, $next);&quot;,&quot;64&quot;:&quot;        }&quot;,&quot;65&quot;:&quot;    }&quot;,&quot;66&quot;:&quot;&quot;,&quot;67&quot;:&quot;    \/**&quot;,&quot;68&quot;:&quot;     * Handle the given request within session state.&quot;,&quot;69&quot;:&quot;     *&quot;,&quot;70&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;71&quot;:&quot;     * @param  \\\\Illuminate\\\\Contracts\\\\Session\\\\Session  $session&quot;,&quot;72&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;73&quot;:&quot;     * @return mixed&quot;,&quot;74&quot;:&quot;     *\/&quot;,&quot;75&quot;:&quot;    protected function handleRequestWhileBlocking(Request $request, $session, Closure $next)&quot;,&quot;76&quot;:&quot;    {&quot;,&quot;77&quot;:&quot;        if (! $request-&gt;route() instanceof Route) {&quot;,&quot;78&quot;:&quot;            return;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:37,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Cookie\\\\Middleware\\\\AddQueuedCookiesToResponse&quot;,&quot;code_snippet&quot;:{&quot;16&quot;:&quot;&quot;,&quot;17&quot;:&quot;    \/**&quot;,&quot;18&quot;:&quot;     * Create a new CookieQueue instance.&quot;,&quot;19&quot;:&quot;     *&quot;,&quot;20&quot;:&quot;     * @param  \\\\Illuminate\\\\Contracts\\\\Cookie\\\\QueueingFactory  $cookies&quot;,&quot;21&quot;:&quot;     * @return void&quot;,&quot;22&quot;:&quot;     *\/&quot;,&quot;23&quot;:&quot;    public function __construct(CookieJar $cookies)&quot;,&quot;24&quot;:&quot;    {&quot;,&quot;25&quot;:&quot;        $this-&gt;cookies = $cookies;&quot;,&quot;26&quot;:&quot;    }&quot;,&quot;27&quot;:&quot;&quot;,&quot;28&quot;:&quot;    \/**&quot;,&quot;29&quot;:&quot;     * Handle an incoming request.&quot;,&quot;30&quot;:&quot;     *&quot;,&quot;31&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;32&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;33&quot;:&quot;     * @return mixed&quot;,&quot;34&quot;:&quot;     *\/&quot;,&quot;35&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;36&quot;:&quot;    {&quot;,&quot;37&quot;:&quot;        $response = $next($request);&quot;,&quot;38&quot;:&quot;&quot;,&quot;39&quot;:&quot;        foreach ($this-&gt;cookies-&gt;getQueuedCookies() as $cookie) {&quot;,&quot;40&quot;:&quot;            $response-&gt;headers-&gt;setCookie($cookie);&quot;,&quot;41&quot;:&quot;        }&quot;,&quot;42&quot;:&quot;&quot;,&quot;43&quot;:&quot;        return $response;&quot;,&quot;44&quot;:&quot;    }&quot;,&quot;45&quot;:&quot;}&quot;,&quot;46&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/AddQueuedCookiesToResponse.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/AddQueuedCookiesToResponse.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:67,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Cookie\\\\Middleware\\\\EncryptCookies&quot;,&quot;code_snippet&quot;:{&quot;52&quot;:&quot;     *\/&quot;,&quot;53&quot;:&quot;    public function disableFor($name)&quot;,&quot;54&quot;:&quot;    {&quot;,&quot;55&quot;:&quot;        $this-&gt;except = array_merge($this-&gt;except, (array) $name);&quot;,&quot;56&quot;:&quot;    }&quot;,&quot;57&quot;:&quot;&quot;,&quot;58&quot;:&quot;    \/**&quot;,&quot;59&quot;:&quot;     * Handle an incoming request.&quot;,&quot;60&quot;:&quot;     *&quot;,&quot;61&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;62&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;63&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;64&quot;:&quot;     *\/&quot;,&quot;65&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;66&quot;:&quot;    {&quot;,&quot;67&quot;:&quot;        return $this-&gt;encrypt($next($this-&gt;decrypt($request)));&quot;,&quot;68&quot;:&quot;    }&quot;,&quot;69&quot;:&quot;&quot;,&quot;70&quot;:&quot;    \/**&quot;,&quot;71&quot;:&quot;     * Decrypt the cookies on the request.&quot;,&quot;72&quot;:&quot;     *&quot;,&quot;73&quot;:&quot;     * @param  \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Request  $request&quot;,&quot;74&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Request&quot;,&quot;75&quot;:&quot;     *\/&quot;,&quot;76&quot;:&quot;    protected function decrypt(Request $request)&quot;,&quot;77&quot;:&quot;    {&quot;,&quot;78&quot;:&quot;        foreach ($request-&gt;cookies as $key =&gt; $cookie) {&quot;,&quot;79&quot;:&quot;            if ($this-&gt;isDisabled($key) || is_array($cookie)) {&quot;,&quot;80&quot;:&quot;                continue;&quot;,&quot;81&quot;:&quot;            }&quot;,&quot;82&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/EncryptCookies.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/EncryptCookies.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:23,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;dacoto\\\\LaravelInstaller\\\\Middleware\\\\ToInstallMiddleware&quot;,&quot;code_snippet&quot;:{&quot;6&quot;:&quot;use Illuminate\\\\Http\\\\RedirectResponse;&quot;,&quot;7&quot;:&quot;use Illuminate\\\\Http\\\\Request;&quot;,&quot;8&quot;:&quot;&quot;,&quot;9&quot;:&quot;class ToInstallMiddleware&quot;,&quot;10&quot;:&quot;{&quot;,&quot;11&quot;:&quot;    \/**&quot;,&quot;12&quot;:&quot;     * Handle an incoming request.&quot;,&quot;13&quot;:&quot;     *&quot;,&quot;14&quot;:&quot;     * @param  Request  $request&quot;,&quot;15&quot;:&quot;     * @param  Closure  $next&quot;,&quot;16&quot;:&quot;     * @return RedirectResponse|mixed&quot;,&quot;17&quot;:&quot;     *\/&quot;,&quot;18&quot;:&quot;    public function handle(Request $request, Closure $next)&quot;,&quot;19&quot;:&quot;    {&quot;,&quot;20&quot;:&quot;        if (!$this-&gt;alreadyInstalled() &amp;&amp; explode(&#039;\/&#039;, $request-&gt;route() ? $request-&gt;route()-&gt;uri() : &#039;&#039;)[0] !== &#039;install&#039;) {&quot;,&quot;21&quot;:&quot;            return redirect()-&gt;route(&#039;LaravelInstaller::install.index&#039;);&quot;,&quot;22&quot;:&quot;        }&quot;,&quot;23&quot;:&quot;        return $next($request);&quot;,&quot;24&quot;:&quot;    }&quot;,&quot;25&quot;:&quot;&quot;,&quot;26&quot;:&quot;    \/**&quot;,&quot;27&quot;:&quot;     * If application is already installed.&quot;,&quot;28&quot;:&quot;     *&quot;,&quot;29&quot;:&quot;     * @return bool&quot;,&quot;30&quot;:&quot;     *\/&quot;,&quot;31&quot;:&quot;    public function alreadyInstalled(): bool&quot;,&quot;32&quot;:&quot;    {&quot;,&quot;33&quot;:&quot;        return file_exists(storage_path(&#039;installed&#039;));&quot;,&quot;34&quot;:&quot;    }&quot;,&quot;35&quot;:&quot;}&quot;,&quot;36&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/packages\/mobidonia\/laravel-dashboard-installer\/src\/Middleware\/ToInstallMiddleware.php&quot;,&quot;is_application_frame&quot;:true,&quot;relative_file&quot;:&quot;packages\/mobidonia\/laravel-dashboard-installer\/src\/Middleware\/ToInstallMiddleware.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:103,&quot;method&quot;:&quot;then&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;88&quot;:&quot;        return $this;&quot;,&quot;89&quot;:&quot;    }&quot;,&quot;90&quot;:&quot;&quot;,&quot;91&quot;:&quot;    \/**&quot;,&quot;92&quot;:&quot;     * Run the pipeline with a final destination callback.&quot;,&quot;93&quot;:&quot;     *&quot;,&quot;94&quot;:&quot;     * @param  \\\\Closure  $destination&quot;,&quot;95&quot;:&quot;     * @return mixed&quot;,&quot;96&quot;:&quot;     *\/&quot;,&quot;97&quot;:&quot;    public function then(Closure $destination)&quot;,&quot;98&quot;:&quot;    {&quot;,&quot;99&quot;:&quot;        $pipeline = array_reduce(&quot;,&quot;100&quot;:&quot;            array_reverse($this-&gt;pipes()), $this-&gt;carry(), $this-&gt;prepareDestination($destination)&quot;,&quot;101&quot;:&quot;        );&quot;,&quot;102&quot;:&quot;&quot;,&quot;103&quot;:&quot;        return $pipeline($this-&gt;passable);&quot;,&quot;104&quot;:&quot;    }&quot;,&quot;105&quot;:&quot;&quot;,&quot;106&quot;:&quot;    \/**&quot;,&quot;107&quot;:&quot;     * Run the pipeline and return the result.&quot;,&quot;108&quot;:&quot;     *&quot;,&quot;109&quot;:&quot;     * @return mixed&quot;,&quot;110&quot;:&quot;     *\/&quot;,&quot;111&quot;:&quot;    public function thenReturn()&quot;,&quot;112&quot;:&quot;    {&quot;,&quot;113&quot;:&quot;        return $this-&gt;then(function ($passable) {&quot;,&quot;114&quot;:&quot;            return $passable;&quot;,&quot;115&quot;:&quot;        });&quot;,&quot;116&quot;:&quot;    }&quot;,&quot;117&quot;:&quot;&quot;,&quot;118&quot;:&quot;    \/**&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:694,&quot;method&quot;:&quot;runRouteWithinStack&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Router&quot;,&quot;code_snippet&quot;:{&quot;679&quot;:&quot;     *\/&quot;,&quot;680&quot;:&quot;    protected function runRouteWithinStack(Route $route, Request $request)&quot;,&quot;681&quot;:&quot;    {&quot;,&quot;682&quot;:&quot;        $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;&quot;,&quot;683&quot;:&quot;                                $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;&quot;,&quot;684&quot;:&quot;&quot;,&quot;685&quot;:&quot;        $middleware = $shouldSkipMiddleware ? [] : $this-&gt;gatherRouteMiddleware($route);&quot;,&quot;686&quot;:&quot;&quot;,&quot;687&quot;:&quot;        return (new Pipeline($this-&gt;container))&quot;,&quot;688&quot;:&quot;                        -&gt;send($request)&quot;,&quot;689&quot;:&quot;                        -&gt;through($middleware)&quot;,&quot;690&quot;:&quot;                        -&gt;then(function ($request) use ($route) {&quot;,&quot;691&quot;:&quot;                            return $this-&gt;prepareResponse(&quot;,&quot;692&quot;:&quot;                                $request, $route-&gt;run()&quot;,&quot;693&quot;:&quot;                            );&quot;,&quot;694&quot;:&quot;                        });&quot;,&quot;695&quot;:&quot;    }&quot;,&quot;696&quot;:&quot;&quot;,&quot;697&quot;:&quot;    \/**&quot;,&quot;698&quot;:&quot;     * Gather the middleware for the given route with resolved class names.&quot;,&quot;699&quot;:&quot;     *&quot;,&quot;700&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Route  $route&quot;,&quot;701&quot;:&quot;     * @return array&quot;,&quot;702&quot;:&quot;     *\/&quot;,&quot;703&quot;:&quot;    public function gatherRouteMiddleware(Route $route)&quot;,&quot;704&quot;:&quot;    {&quot;,&quot;705&quot;:&quot;        $excluded = collect($route-&gt;excludedMiddleware())-&gt;map(function ($name) {&quot;,&quot;706&quot;:&quot;            return (array) MiddlewareNameResolver::resolve($name, $this-&gt;middleware, $this-&gt;middlewareGroups);&quot;,&quot;707&quot;:&quot;        })-&gt;flatten()-&gt;values()-&gt;all();&quot;,&quot;708&quot;:&quot;&quot;,&quot;709&quot;:&quot;        $middleware = collect($route-&gt;gatherMiddleware())-&gt;map(function ($name) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;},{&quot;line_number&quot;:669,&quot;method&quot;:&quot;runRoute&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Router&quot;,&quot;code_snippet&quot;:{&quot;654&quot;:&quot;     * Return the response for the given route.&quot;,&quot;655&quot;:&quot;     *&quot;,&quot;656&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;657&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Route  $route&quot;,&quot;658&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;659&quot;:&quot;     *\/&quot;,&quot;660&quot;:&quot;    protected function runRoute(Request $request, Route $route)&quot;,&quot;661&quot;:&quot;    {&quot;,&quot;662&quot;:&quot;        $request-&gt;setRouteResolver(function () use ($route) {&quot;,&quot;663&quot;:&quot;            return $route;&quot;,&quot;664&quot;:&quot;        });&quot;,&quot;665&quot;:&quot;&quot;,&quot;666&quot;:&quot;        $this-&gt;events-&gt;dispatch(new RouteMatched($route, $request));&quot;,&quot;667&quot;:&quot;&quot;,&quot;668&quot;:&quot;        return $this-&gt;prepareResponse($request,&quot;,&quot;669&quot;:&quot;            $this-&gt;runRouteWithinStack($route, $request)&quot;,&quot;670&quot;:&quot;        );&quot;,&quot;671&quot;:&quot;    }&quot;,&quot;672&quot;:&quot;&quot;,&quot;673&quot;:&quot;    \/**&quot;,&quot;674&quot;:&quot;     * Run the given route within a Stack \\&quot;onion\\&quot; instance.&quot;,&quot;675&quot;:&quot;     *&quot;,&quot;676&quot;:&quot;     * @param  \\\\Illuminate\\\\Routing\\\\Route  $route&quot;,&quot;677&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;678&quot;:&quot;     * @return mixed&quot;,&quot;679&quot;:&quot;     *\/&quot;,&quot;680&quot;:&quot;    protected function runRouteWithinStack(Route $route, Request $request)&quot;,&quot;681&quot;:&quot;    {&quot;,&quot;682&quot;:&quot;        $shouldSkipMiddleware = $this-&gt;container-&gt;bound(&#039;middleware.disable&#039;) &amp;&amp;&quot;,&quot;683&quot;:&quot;                                $this-&gt;container-&gt;make(&#039;middleware.disable&#039;) === true;&quot;,&quot;684&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;},{&quot;line_number&quot;:635,&quot;method&quot;:&quot;dispatchToRoute&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Router&quot;,&quot;code_snippet&quot;:{&quot;620&quot;:&quot;    public function dispatch(Request $request)&quot;,&quot;621&quot;:&quot;    {&quot;,&quot;622&quot;:&quot;        $this-&gt;currentRequest = $request;&quot;,&quot;623&quot;:&quot;&quot;,&quot;624&quot;:&quot;        return $this-&gt;dispatchToRoute($request);&quot;,&quot;625&quot;:&quot;    }&quot;,&quot;626&quot;:&quot;&quot;,&quot;627&quot;:&quot;    \/**&quot;,&quot;628&quot;:&quot;     * Dispatch the request to a route and return the response.&quot;,&quot;629&quot;:&quot;     *&quot;,&quot;630&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;631&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;632&quot;:&quot;     *\/&quot;,&quot;633&quot;:&quot;    public function dispatchToRoute(Request $request)&quot;,&quot;634&quot;:&quot;    {&quot;,&quot;635&quot;:&quot;        return $this-&gt;runRoute($request, $this-&gt;findRoute($request));&quot;,&quot;636&quot;:&quot;    }&quot;,&quot;637&quot;:&quot;&quot;,&quot;638&quot;:&quot;    \/**&quot;,&quot;639&quot;:&quot;     * Find the route matching a given request.&quot;,&quot;640&quot;:&quot;     *&quot;,&quot;641&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;642&quot;:&quot;     * @return \\\\Illuminate\\\\Routing\\\\Route&quot;,&quot;643&quot;:&quot;     *\/&quot;,&quot;644&quot;:&quot;    protected function findRoute($request)&quot;,&quot;645&quot;:&quot;    {&quot;,&quot;646&quot;:&quot;        $this-&gt;current = $route = $this-&gt;routes-&gt;match($request);&quot;,&quot;647&quot;:&quot;&quot;,&quot;648&quot;:&quot;        $this-&gt;container-&gt;instance(Route::class, $route);&quot;,&quot;649&quot;:&quot;&quot;,&quot;650&quot;:&quot;        return $route;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;},{&quot;line_number&quot;:624,&quot;method&quot;:&quot;dispatch&quot;,&quot;class&quot;:&quot;Illuminate\\\\Routing\\\\Router&quot;,&quot;code_snippet&quot;:{&quot;609&quot;:&quot;        $route = tap($this-&gt;routes-&gt;getByName($name))-&gt;bind($this-&gt;currentRequest);&quot;,&quot;610&quot;:&quot;&quot;,&quot;611&quot;:&quot;        return $this-&gt;runRoute($this-&gt;currentRequest, $route);&quot;,&quot;612&quot;:&quot;    }&quot;,&quot;613&quot;:&quot;&quot;,&quot;614&quot;:&quot;    \/**&quot;,&quot;615&quot;:&quot;     * Dispatch the request to the application.&quot;,&quot;616&quot;:&quot;     *&quot;,&quot;617&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;618&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;619&quot;:&quot;     *\/&quot;,&quot;620&quot;:&quot;    public function dispatch(Request $request)&quot;,&quot;621&quot;:&quot;    {&quot;,&quot;622&quot;:&quot;        $this-&gt;currentRequest = $request;&quot;,&quot;623&quot;:&quot;&quot;,&quot;624&quot;:&quot;        return $this-&gt;dispatchToRoute($request);&quot;,&quot;625&quot;:&quot;    }&quot;,&quot;626&quot;:&quot;&quot;,&quot;627&quot;:&quot;    \/**&quot;,&quot;628&quot;:&quot;     * Dispatch the request to a route and return the response.&quot;,&quot;629&quot;:&quot;     *&quot;,&quot;630&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;631&quot;:&quot;     * @return \\\\Symfony\\\\Component\\\\HttpFoundation\\\\Response&quot;,&quot;632&quot;:&quot;     *\/&quot;,&quot;633&quot;:&quot;    public function dispatchToRoute(Request $request)&quot;,&quot;634&quot;:&quot;    {&quot;,&quot;635&quot;:&quot;        return $this-&gt;runRoute($request, $this-&gt;findRoute($request));&quot;,&quot;636&quot;:&quot;    }&quot;,&quot;637&quot;:&quot;&quot;,&quot;638&quot;:&quot;    \/**&quot;,&quot;639&quot;:&quot;     * Find the route matching a given request.&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php&quot;},{&quot;line_number&quot;:166,&quot;method&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Kernel&quot;,&quot;code_snippet&quot;:{&quot;151&quot;:&quot;        if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {&quot;,&quot;152&quot;:&quot;            $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());&quot;,&quot;153&quot;:&quot;        }&quot;,&quot;154&quot;:&quot;    }&quot;,&quot;155&quot;:&quot;&quot;,&quot;156&quot;:&quot;    \/**&quot;,&quot;157&quot;:&quot;     * Get the route dispatcher callback.&quot;,&quot;158&quot;:&quot;     *&quot;,&quot;159&quot;:&quot;     * @return \\\\Closure&quot;,&quot;160&quot;:&quot;     *\/&quot;,&quot;161&quot;:&quot;    protected function dispatchToRouter()&quot;,&quot;162&quot;:&quot;    {&quot;,&quot;163&quot;:&quot;        return function ($request) {&quot;,&quot;164&quot;:&quot;            $this-&gt;app-&gt;instance(&#039;request&#039;, $request);&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;            return $this-&gt;router-&gt;dispatch($request);&quot;,&quot;167&quot;:&quot;        };&quot;,&quot;168&quot;:&quot;    }&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;    \/**&quot;,&quot;171&quot;:&quot;     * Call the terminate method on any terminable middleware.&quot;,&quot;172&quot;:&quot;     *&quot;,&quot;173&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;174&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Response  $response&quot;,&quot;175&quot;:&quot;     * @return void&quot;,&quot;176&quot;:&quot;     *\/&quot;,&quot;177&quot;:&quot;    public function terminate($request, $response)&quot;,&quot;178&quot;:&quot;    {&quot;,&quot;179&quot;:&quot;        $this-&gt;terminateMiddleware($request, $response);&quot;,&quot;180&quot;:&quot;&quot;,&quot;181&quot;:&quot;        $this-&gt;app-&gt;terminate();&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;},{&quot;line_number&quot;:128,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;113&quot;:&quot;        return $this-&gt;then(function ($passable) {&quot;,&quot;114&quot;:&quot;            return $passable;&quot;,&quot;115&quot;:&quot;        });&quot;,&quot;116&quot;:&quot;    }&quot;,&quot;117&quot;:&quot;&quot;,&quot;118&quot;:&quot;    \/**&quot;,&quot;119&quot;:&quot;     * Get the final piece of the Closure onion.&quot;,&quot;120&quot;:&quot;     *&quot;,&quot;121&quot;:&quot;     * @param  \\\\Closure  $destination&quot;,&quot;122&quot;:&quot;     * @return \\\\Closure&quot;,&quot;123&quot;:&quot;     *\/&quot;,&quot;124&quot;:&quot;    protected function prepareDestination(Closure $destination)&quot;,&quot;125&quot;:&quot;    {&quot;,&quot;126&quot;:&quot;        return function ($passable) use ($destination) {&quot;,&quot;127&quot;:&quot;            try {&quot;,&quot;128&quot;:&quot;                return $destination($passable);&quot;,&quot;129&quot;:&quot;            } catch (Throwable $e) {&quot;,&quot;130&quot;:&quot;                return $this-&gt;handleException($passable, $e);&quot;,&quot;131&quot;:&quot;            }&quot;,&quot;132&quot;:&quot;        };&quot;,&quot;133&quot;:&quot;    }&quot;,&quot;134&quot;:&quot;&quot;,&quot;135&quot;:&quot;    \/**&quot;,&quot;136&quot;:&quot;     * Get a Closure that represents a slice of the application onion.&quot;,&quot;137&quot;:&quot;     *&quot;,&quot;138&quot;:&quot;     * @return \\\\Closure&quot;,&quot;139&quot;:&quot;     *\/&quot;,&quot;140&quot;:&quot;    protected function carry()&quot;,&quot;141&quot;:&quot;    {&quot;,&quot;142&quot;:&quot;        return function ($stack, $pipe) {&quot;,&quot;143&quot;:&quot;            return function ($passable) use ($stack, $pipe) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:67,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Barryvdh\\\\Debugbar\\\\Middleware\\\\InjectDebugbar&quot;,&quot;code_snippet&quot;:{&quot;52&quot;:&quot;     *&quot;,&quot;53&quot;:&quot;     * @param  Request  $request&quot;,&quot;54&quot;:&quot;     * @param  Closure  $next&quot;,&quot;55&quot;:&quot;     * @return mixed&quot;,&quot;56&quot;:&quot;     *\/&quot;,&quot;57&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;58&quot;:&quot;    {&quot;,&quot;59&quot;:&quot;        if (!$this-&gt;debugbar-&gt;isEnabled() || $this-&gt;inExceptArray($request)) {&quot;,&quot;60&quot;:&quot;            return $next($request);&quot;,&quot;61&quot;:&quot;        }&quot;,&quot;62&quot;:&quot;&quot;,&quot;63&quot;:&quot;        $this-&gt;debugbar-&gt;boot();&quot;,&quot;64&quot;:&quot;&quot;,&quot;65&quot;:&quot;        try {&quot;,&quot;66&quot;:&quot;            \/** @var \\\\Illuminate\\\\Http\\\\Response $response *\/&quot;,&quot;67&quot;:&quot;            $response = $next($request);&quot;,&quot;68&quot;:&quot;        } catch (Exception $e) {&quot;,&quot;69&quot;:&quot;            $response = $this-&gt;handleException($request, $e);&quot;,&quot;70&quot;:&quot;        } catch (Error $error) {&quot;,&quot;71&quot;:&quot;            $e = new FatalThrowableError($error);&quot;,&quot;72&quot;:&quot;            $response = $this-&gt;handleException($request, $e);&quot;,&quot;73&quot;:&quot;        }&quot;,&quot;74&quot;:&quot;&quot;,&quot;75&quot;:&quot;        \/\/ Modify the response to add the Debugbar&quot;,&quot;76&quot;:&quot;        $this-&gt;debugbar-&gt;modifyResponse($request, $response);&quot;,&quot;77&quot;:&quot;&quot;,&quot;78&quot;:&quot;        return $response;&quot;,&quot;79&quot;:&quot;    }&quot;,&quot;80&quot;:&quot;&quot;,&quot;81&quot;:&quot;    \/**&quot;,&quot;82&quot;:&quot;     * Handle the given exception.&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/barryvdh\/laravel-debugbar\/src\/Middleware\/InjectDebugbar.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/barryvdh\/laravel-debugbar\/src\/Middleware\/InjectDebugbar.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:21,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest&quot;,&quot;code_snippet&quot;:{&quot;6&quot;:&quot;use Symfony\\\\Component\\\\HttpFoundation\\\\ParameterBag;&quot;,&quot;7&quot;:&quot;&quot;,&quot;8&quot;:&quot;class TransformsRequest&quot;,&quot;9&quot;:&quot;{&quot;,&quot;10&quot;:&quot;    \/**&quot;,&quot;11&quot;:&quot;     * Handle an incoming request.&quot;,&quot;12&quot;:&quot;     *&quot;,&quot;13&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;14&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;15&quot;:&quot;     * @return mixed&quot;,&quot;16&quot;:&quot;     *\/&quot;,&quot;17&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;18&quot;:&quot;    {&quot;,&quot;19&quot;:&quot;        $this-&gt;clean($request);&quot;,&quot;20&quot;:&quot;&quot;,&quot;21&quot;:&quot;        return $next($request);&quot;,&quot;22&quot;:&quot;    }&quot;,&quot;23&quot;:&quot;&quot;,&quot;24&quot;:&quot;    \/**&quot;,&quot;25&quot;:&quot;     * Clean the request&#039;s data.&quot;,&quot;26&quot;:&quot;     *&quot;,&quot;27&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;28&quot;:&quot;     * @return void&quot;,&quot;29&quot;:&quot;     *\/&quot;,&quot;30&quot;:&quot;    protected function clean($request)&quot;,&quot;31&quot;:&quot;    {&quot;,&quot;32&quot;:&quot;        $this-&gt;cleanParameterBag($request-&gt;query);&quot;,&quot;33&quot;:&quot;&quot;,&quot;34&quot;:&quot;        if ($request-&gt;isJson()) {&quot;,&quot;35&quot;:&quot;            $this-&gt;cleanParameterBag($request-&gt;json());&quot;,&quot;36&quot;:&quot;        } elseif ($request-&gt;request !== $request-&gt;query) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:21,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest&quot;,&quot;code_snippet&quot;:{&quot;6&quot;:&quot;use Symfony\\\\Component\\\\HttpFoundation\\\\ParameterBag;&quot;,&quot;7&quot;:&quot;&quot;,&quot;8&quot;:&quot;class TransformsRequest&quot;,&quot;9&quot;:&quot;{&quot;,&quot;10&quot;:&quot;    \/**&quot;,&quot;11&quot;:&quot;     * Handle an incoming request.&quot;,&quot;12&quot;:&quot;     *&quot;,&quot;13&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;14&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;15&quot;:&quot;     * @return mixed&quot;,&quot;16&quot;:&quot;     *\/&quot;,&quot;17&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;18&quot;:&quot;    {&quot;,&quot;19&quot;:&quot;        $this-&gt;clean($request);&quot;,&quot;20&quot;:&quot;&quot;,&quot;21&quot;:&quot;        return $next($request);&quot;,&quot;22&quot;:&quot;    }&quot;,&quot;23&quot;:&quot;&quot;,&quot;24&quot;:&quot;    \/**&quot;,&quot;25&quot;:&quot;     * Clean the request&#039;s data.&quot;,&quot;26&quot;:&quot;     *&quot;,&quot;27&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;28&quot;:&quot;     * @return void&quot;,&quot;29&quot;:&quot;     *\/&quot;,&quot;30&quot;:&quot;    protected function clean($request)&quot;,&quot;31&quot;:&quot;    {&quot;,&quot;32&quot;:&quot;        $this-&gt;cleanParameterBag($request-&gt;query);&quot;,&quot;33&quot;:&quot;&quot;,&quot;34&quot;:&quot;        if ($request-&gt;isJson()) {&quot;,&quot;35&quot;:&quot;            $this-&gt;cleanParameterBag($request-&gt;json());&quot;,&quot;36&quot;:&quot;        } elseif ($request-&gt;request !== $request-&gt;query) {&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:27,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ValidatePostSize&quot;,&quot;code_snippet&quot;:{&quot;12&quot;:&quot;     *&quot;,&quot;13&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;14&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;15&quot;:&quot;     * @return mixed&quot;,&quot;16&quot;:&quot;     *&quot;,&quot;17&quot;:&quot;     * @throws \\\\Illuminate\\\\Http\\\\Exceptions\\\\PostTooLargeException&quot;,&quot;18&quot;:&quot;     *\/&quot;,&quot;19&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;20&quot;:&quot;    {&quot;,&quot;21&quot;:&quot;        $max = $this-&gt;getPostMaxSize();&quot;,&quot;22&quot;:&quot;&quot;,&quot;23&quot;:&quot;        if ($max &gt; 0 &amp;&amp; $request-&gt;server(&#039;CONTENT_LENGTH&#039;) &gt; $max) {&quot;,&quot;24&quot;:&quot;            throw new PostTooLargeException;&quot;,&quot;25&quot;:&quot;        }&quot;,&quot;26&quot;:&quot;&quot;,&quot;27&quot;:&quot;        return $next($request);&quot;,&quot;28&quot;:&quot;    }&quot;,&quot;29&quot;:&quot;&quot;,&quot;30&quot;:&quot;    \/**&quot;,&quot;31&quot;:&quot;     * Determine the server &#039;post_max_size&#039; as bytes.&quot;,&quot;32&quot;:&quot;     *&quot;,&quot;33&quot;:&quot;     * @return int&quot;,&quot;34&quot;:&quot;     *\/&quot;,&quot;35&quot;:&quot;    protected function getPostMaxSize()&quot;,&quot;36&quot;:&quot;    {&quot;,&quot;37&quot;:&quot;        if (is_numeric($postMaxSize = ini_get(&#039;post_max_size&#039;))) {&quot;,&quot;38&quot;:&quot;            return (int) $postMaxSize;&quot;,&quot;39&quot;:&quot;        }&quot;,&quot;40&quot;:&quot;&quot;,&quot;41&quot;:&quot;        $metric = strtoupper(substr($postMaxSize, -1));&quot;,&quot;42&quot;:&quot;        $postMaxSize = (int) $postMaxSize;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:86,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance&quot;,&quot;code_snippet&quot;:{&quot;71&quot;:&quot;                return response(&quot;,&quot;72&quot;:&quot;                    $data[&#039;template&#039;],&quot;,&quot;73&quot;:&quot;                    $data[&#039;status&#039;] ?? 503,&quot;,&quot;74&quot;:&quot;                    isset($data[&#039;retry&#039;]) ? [&#039;Retry-After&#039; =&gt; $data[&#039;retry&#039;]] : []&quot;,&quot;75&quot;:&quot;                );&quot;,&quot;76&quot;:&quot;            }&quot;,&quot;77&quot;:&quot;&quot;,&quot;78&quot;:&quot;            throw new HttpException(&quot;,&quot;79&quot;:&quot;                $data[&#039;status&#039;] ?? 503,&quot;,&quot;80&quot;:&quot;                &#039;Service Unavailable&#039;,&quot;,&quot;81&quot;:&quot;                null,&quot;,&quot;82&quot;:&quot;                isset($data[&#039;retry&#039;]) ? [&#039;Retry-After&#039; =&gt; $data[&#039;retry&#039;]] : []&quot;,&quot;83&quot;:&quot;            );&quot;,&quot;84&quot;:&quot;        }&quot;,&quot;85&quot;:&quot;&quot;,&quot;86&quot;:&quot;        return $next($request);&quot;,&quot;87&quot;:&quot;    }&quot;,&quot;88&quot;:&quot;&quot;,&quot;89&quot;:&quot;    \/**&quot;,&quot;90&quot;:&quot;     * Determine if the incoming request has a maintenance mode bypass cookie.&quot;,&quot;91&quot;:&quot;     *&quot;,&quot;92&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;93&quot;:&quot;     * @param  array  $data&quot;,&quot;94&quot;:&quot;     * @return bool&quot;,&quot;95&quot;:&quot;     *\/&quot;,&quot;96&quot;:&quot;    protected function hasValidBypassCookie($request, array $data)&quot;,&quot;97&quot;:&quot;    {&quot;,&quot;98&quot;:&quot;        return isset($data[&#039;secret&#039;]) &amp;&amp;&quot;,&quot;99&quot;:&quot;                $request-&gt;cookie(&#039;laravel_maintenance&#039;) &amp;&amp;&quot;,&quot;100&quot;:&quot;                MaintenanceModeBypassCookie::isValid(&quot;,&quot;101&quot;:&quot;                    $request-&gt;cookie(&#039;laravel_maintenance&#039;),&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/PreventRequestsDuringMaintenance.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/PreventRequestsDuringMaintenance.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:37,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Fruitcake\\\\Cors\\\\HandleCors&quot;,&quot;code_snippet&quot;:{&quot;22&quot;:&quot;        $this-&gt;cors = $cors;&quot;,&quot;23&quot;:&quot;        $this-&gt;container = $container;&quot;,&quot;24&quot;:&quot;    }&quot;,&quot;25&quot;:&quot;&quot;,&quot;26&quot;:&quot;    \/**&quot;,&quot;27&quot;:&quot;     * Handle an incoming request. Based on Asm89\\\\Stack\\\\Cors by asm89&quot;,&quot;28&quot;:&quot;     *&quot;,&quot;29&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;30&quot;:&quot;     * @param  \\\\Closure  $next&quot;,&quot;31&quot;:&quot;     * @return Response&quot;,&quot;32&quot;:&quot;     *\/&quot;,&quot;33&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;34&quot;:&quot;    {&quot;,&quot;35&quot;:&quot;        \/\/ Check if we&#039;re dealing with CORS and if we should handle it&quot;,&quot;36&quot;:&quot;        if (! $this-&gt;shouldRun($request)) {&quot;,&quot;37&quot;:&quot;            return $next($request);&quot;,&quot;38&quot;:&quot;        }&quot;,&quot;39&quot;:&quot;&quot;,&quot;40&quot;:&quot;        \/\/ For Preflight, return the Preflight response&quot;,&quot;41&quot;:&quot;        if ($this-&gt;cors-&gt;isPreflightRequest($request)) {&quot;,&quot;42&quot;:&quot;            $response = $this-&gt;cors-&gt;handlePreflightRequest($request);&quot;,&quot;43&quot;:&quot;&quot;,&quot;44&quot;:&quot;            $this-&gt;cors-&gt;varyHeader($response, &#039;Access-Control-Request-Method&#039;);&quot;,&quot;45&quot;:&quot;&quot;,&quot;46&quot;:&quot;            return $response;&quot;,&quot;47&quot;:&quot;        }&quot;,&quot;48&quot;:&quot;&quot;,&quot;49&quot;:&quot;        \/\/ Add the headers on the Request Handled event as fallback in case of exceptions&quot;,&quot;50&quot;:&quot;        if (class_exists(RequestHandled::class) &amp;&amp; $this-&gt;container-&gt;bound(&#039;events&#039;)) {&quot;,&quot;51&quot;:&quot;            $this-&gt;container-&gt;make(&#039;events&#039;)-&gt;listen(RequestHandled::class, function (RequestHandled $event) {&quot;,&quot;52&quot;:&quot;                $this-&gt;addHeaders($event-&gt;request, $event-&gt;response);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/fruitcake\/laravel-cors\/src\/HandleCors.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/fruitcake\/laravel-cors\/src\/HandleCors.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:57,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Fideloper\\\\Proxy\\\\TrustProxies&quot;,&quot;code_snippet&quot;:{&quot;42&quot;:&quot;    \/**&quot;,&quot;43&quot;:&quot;     * Handle an incoming request.&quot;,&quot;44&quot;:&quot;     *&quot;,&quot;45&quot;:&quot;     * @param \\\\Illuminate\\\\Http\\\\Request $request&quot;,&quot;46&quot;:&quot;     * @param \\\\Closure                 $next&quot;,&quot;47&quot;:&quot;     *&quot;,&quot;48&quot;:&quot;     * @throws \\\\Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\HttpException&quot;,&quot;49&quot;:&quot;     *&quot;,&quot;50&quot;:&quot;     * @return mixed&quot;,&quot;51&quot;:&quot;     *\/&quot;,&quot;52&quot;:&quot;    public function handle(Request $request, Closure $next)&quot;,&quot;53&quot;:&quot;    {&quot;,&quot;54&quot;:&quot;        $request::setTrustedProxies([], $this-&gt;getTrustedHeaderNames()); \/\/ Reset trusted proxies between requests&quot;,&quot;55&quot;:&quot;        $this-&gt;setTrustedProxyIpAddresses($request);&quot;,&quot;56&quot;:&quot;&quot;,&quot;57&quot;:&quot;        return $next($request);&quot;,&quot;58&quot;:&quot;    }&quot;,&quot;59&quot;:&quot;&quot;,&quot;60&quot;:&quot;    \/**&quot;,&quot;61&quot;:&quot;     * Sets the trusted proxies on the request to the value of trustedproxy.proxies&quot;,&quot;62&quot;:&quot;     *&quot;,&quot;63&quot;:&quot;     * @param \\\\Illuminate\\\\Http\\\\Request $request&quot;,&quot;64&quot;:&quot;     *\/&quot;,&quot;65&quot;:&quot;    protected function setTrustedProxyIpAddresses(Request $request)&quot;,&quot;66&quot;:&quot;    {&quot;,&quot;67&quot;:&quot;        $trustedIps = $this-&gt;proxies ?: $this-&gt;config-&gt;get(&#039;trustedproxy.proxies&#039;);&quot;,&quot;68&quot;:&quot;&quot;,&quot;69&quot;:&quot;        \/\/ Trust any IP address that calls us&quot;,&quot;70&quot;:&quot;        \/\/ `**` for backwards compatibility, but is deprecated&quot;,&quot;71&quot;:&quot;        if ($trustedIps === &#039;*&#039; || $trustedIps === &#039;**&#039;) {&quot;,&quot;72&quot;:&quot;            return $this-&gt;setTrustedProxyIpAddressesToTheCallingIp($request);&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/fideloper\/proxy\/src\/TrustProxies.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/fideloper\/proxy\/src\/TrustProxies.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:46,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Sentry\\\\Laravel\\\\Tracing\\\\Middleware&quot;,&quot;code_snippet&quot;:{&quot;31&quot;:&quot;&quot;,&quot;32&quot;:&quot;    \/**&quot;,&quot;33&quot;:&quot;     * Handle an incoming request.&quot;,&quot;34&quot;:&quot;     *&quot;,&quot;35&quot;:&quot;     * @param \\\\Illuminate\\\\Http\\\\Request $request&quot;,&quot;36&quot;:&quot;     * @param \\\\Closure                 $next&quot;,&quot;37&quot;:&quot;     *&quot;,&quot;38&quot;:&quot;     * @return mixed&quot;,&quot;39&quot;:&quot;     *\/&quot;,&quot;40&quot;:&quot;    public function handle($request, Closure $next)&quot;,&quot;41&quot;:&quot;    {&quot;,&quot;42&quot;:&quot;        if (app()-&gt;bound(&#039;sentry&#039;)) {&quot;,&quot;43&quot;:&quot;            $this-&gt;startTransaction($request, app(&#039;sentry&#039;));&quot;,&quot;44&quot;:&quot;        }&quot;,&quot;45&quot;:&quot;&quot;,&quot;46&quot;:&quot;        return $next($request);&quot;,&quot;47&quot;:&quot;    }&quot;,&quot;48&quot;:&quot;&quot;,&quot;49&quot;:&quot;    \/**&quot;,&quot;50&quot;:&quot;     * Handle the application termination.&quot;,&quot;51&quot;:&quot;     *&quot;,&quot;52&quot;:&quot;     * @param \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;53&quot;:&quot;     * @param \\\\Illuminate\\\\Http\\\\Response $response&quot;,&quot;54&quot;:&quot;     *&quot;,&quot;55&quot;:&quot;     * @return void&quot;,&quot;56&quot;:&quot;     *\/&quot;,&quot;57&quot;:&quot;    public function terminate($request, $response): void&quot;,&quot;58&quot;:&quot;    {&quot;,&quot;59&quot;:&quot;        if ($this-&gt;transaction !== null &amp;&amp; app()-&gt;bound(&#039;sentry&#039;)) {&quot;,&quot;60&quot;:&quot;            if ($this-&gt;appSpan !== null) {&quot;,&quot;61&quot;:&quot;                $this-&gt;appSpan-&gt;finish();&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/sentry\/sentry-laravel\/src\/Sentry\/Laravel\/Tracing\/Middleware.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/sentry\/sentry-laravel\/src\/Sentry\/Laravel\/Tracing\/Middleware.php&quot;},{&quot;line_number&quot;:167,&quot;method&quot;:&quot;Illuminate\\\\Pipeline\\\\{closure}&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;152&quot;:&quot;&quot;,&quot;153&quot;:&quot;                        \/\/ If the pipe is a string we will parse the string and resolve the class out&quot;,&quot;154&quot;:&quot;                        \/\/ of the dependency injection container. We can then build a callable and&quot;,&quot;155&quot;:&quot;                        \/\/ execute the pipe function giving in the parameters that are required.&quot;,&quot;156&quot;:&quot;                        $pipe = $this-&gt;getContainer()-&gt;make($name);&quot;,&quot;157&quot;:&quot;&quot;,&quot;158&quot;:&quot;                        $parameters = array_merge([$passable, $stack], $parameters);&quot;,&quot;159&quot;:&quot;                    } else {&quot;,&quot;160&quot;:&quot;                        \/\/ If the pipe is already an object we&#039;ll just make a callable and pass it to&quot;,&quot;161&quot;:&quot;                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting&quot;,&quot;162&quot;:&quot;                        \/\/ since the object we&#039;re given was already a fully instantiated object.&quot;,&quot;163&quot;:&quot;                        $parameters = [$passable, $stack];&quot;,&quot;164&quot;:&quot;                    }&quot;,&quot;165&quot;:&quot;&quot;,&quot;166&quot;:&quot;                    $carry = method_exists($pipe, $this-&gt;method)&quot;,&quot;167&quot;:&quot;                                    ? $pipe-&gt;{$this-&gt;method}(...$parameters)&quot;,&quot;168&quot;:&quot;                                    : $pipe(...$parameters);&quot;,&quot;169&quot;:&quot;&quot;,&quot;170&quot;:&quot;                    return $this-&gt;handleCarry($carry);&quot;,&quot;171&quot;:&quot;                } catch (Throwable $e) {&quot;,&quot;172&quot;:&quot;                    return $this-&gt;handleException($passable, $e);&quot;,&quot;173&quot;:&quot;                }&quot;,&quot;174&quot;:&quot;            };&quot;,&quot;175&quot;:&quot;        };&quot;,&quot;176&quot;:&quot;    }&quot;,&quot;177&quot;:&quot;&quot;,&quot;178&quot;:&quot;    \/**&quot;,&quot;179&quot;:&quot;     * Parse full pipe string to get name and parameters.&quot;,&quot;180&quot;:&quot;     *&quot;,&quot;181&quot;:&quot;     * @param  string  $pipe&quot;,&quot;182&quot;:&quot;     * @return array&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:103,&quot;method&quot;:&quot;then&quot;,&quot;class&quot;:&quot;Illuminate\\\\Pipeline\\\\Pipeline&quot;,&quot;code_snippet&quot;:{&quot;88&quot;:&quot;        return $this;&quot;,&quot;89&quot;:&quot;    }&quot;,&quot;90&quot;:&quot;&quot;,&quot;91&quot;:&quot;    \/**&quot;,&quot;92&quot;:&quot;     * Run the pipeline with a final destination callback.&quot;,&quot;93&quot;:&quot;     *&quot;,&quot;94&quot;:&quot;     * @param  \\\\Closure  $destination&quot;,&quot;95&quot;:&quot;     * @return mixed&quot;,&quot;96&quot;:&quot;     *\/&quot;,&quot;97&quot;:&quot;    public function then(Closure $destination)&quot;,&quot;98&quot;:&quot;    {&quot;,&quot;99&quot;:&quot;        $pipeline = array_reduce(&quot;,&quot;100&quot;:&quot;            array_reverse($this-&gt;pipes()), $this-&gt;carry(), $this-&gt;prepareDestination($destination)&quot;,&quot;101&quot;:&quot;        );&quot;,&quot;102&quot;:&quot;&quot;,&quot;103&quot;:&quot;        return $pipeline($this-&gt;passable);&quot;,&quot;104&quot;:&quot;    }&quot;,&quot;105&quot;:&quot;&quot;,&quot;106&quot;:&quot;    \/**&quot;,&quot;107&quot;:&quot;     * Run the pipeline and return the result.&quot;,&quot;108&quot;:&quot;     *&quot;,&quot;109&quot;:&quot;     * @return mixed&quot;,&quot;110&quot;:&quot;     *\/&quot;,&quot;111&quot;:&quot;    public function thenReturn()&quot;,&quot;112&quot;:&quot;    {&quot;,&quot;113&quot;:&quot;        return $this-&gt;then(function ($passable) {&quot;,&quot;114&quot;:&quot;            return $passable;&quot;,&quot;115&quot;:&quot;        });&quot;,&quot;116&quot;:&quot;    }&quot;,&quot;117&quot;:&quot;&quot;,&quot;118&quot;:&quot;    \/**&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php&quot;},{&quot;line_number&quot;:141,&quot;method&quot;:&quot;sendRequestThroughRouter&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Kernel&quot;,&quot;code_snippet&quot;:{&quot;126&quot;:&quot;     *&quot;,&quot;127&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;128&quot;:&quot;     * @return \\\\Illuminate\\\\Http\\\\Response&quot;,&quot;129&quot;:&quot;     *\/&quot;,&quot;130&quot;:&quot;    protected function sendRequestThroughRouter($request)&quot;,&quot;131&quot;:&quot;    {&quot;,&quot;132&quot;:&quot;        $this-&gt;app-&gt;instance(&#039;request&#039;, $request);&quot;,&quot;133&quot;:&quot;&quot;,&quot;134&quot;:&quot;        Facade::clearResolvedInstance(&#039;request&#039;);&quot;,&quot;135&quot;:&quot;&quot;,&quot;136&quot;:&quot;        $this-&gt;bootstrap();&quot;,&quot;137&quot;:&quot;&quot;,&quot;138&quot;:&quot;        return (new Pipeline($this-&gt;app))&quot;,&quot;139&quot;:&quot;                    -&gt;send($request)&quot;,&quot;140&quot;:&quot;                    -&gt;through($this-&gt;app-&gt;shouldSkipMiddleware() ? [] : $this-&gt;middleware)&quot;,&quot;141&quot;:&quot;                    -&gt;then($this-&gt;dispatchToRouter());&quot;,&quot;142&quot;:&quot;    }&quot;,&quot;143&quot;:&quot;&quot;,&quot;144&quot;:&quot;    \/**&quot;,&quot;145&quot;:&quot;     * Bootstrap the application for HTTP requests.&quot;,&quot;146&quot;:&quot;     *&quot;,&quot;147&quot;:&quot;     * @return void&quot;,&quot;148&quot;:&quot;     *\/&quot;,&quot;149&quot;:&quot;    public function bootstrap()&quot;,&quot;150&quot;:&quot;    {&quot;,&quot;151&quot;:&quot;        if (! $this-&gt;app-&gt;hasBeenBootstrapped()) {&quot;,&quot;152&quot;:&quot;            $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers());&quot;,&quot;153&quot;:&quot;        }&quot;,&quot;154&quot;:&quot;    }&quot;,&quot;155&quot;:&quot;&quot;,&quot;156&quot;:&quot;    \/**&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;},{&quot;line_number&quot;:110,&quot;method&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Illuminate\\\\Foundation\\\\Http\\\\Kernel&quot;,&quot;code_snippet&quot;:{&quot;95&quot;:&quot;&quot;,&quot;96&quot;:&quot;        $this-&gt;syncMiddlewareToRouter();&quot;,&quot;97&quot;:&quot;    }&quot;,&quot;98&quot;:&quot;&quot;,&quot;99&quot;:&quot;    \/**&quot;,&quot;100&quot;:&quot;     * Handle an incoming HTTP request.&quot;,&quot;101&quot;:&quot;     *&quot;,&quot;102&quot;:&quot;     * @param  \\\\Illuminate\\\\Http\\\\Request  $request&quot;,&quot;103&quot;:&quot;     * @return \\\\Illuminate\\\\Http\\\\Response&quot;,&quot;104&quot;:&quot;     *\/&quot;,&quot;105&quot;:&quot;    public function handle($request)&quot;,&quot;106&quot;:&quot;    {&quot;,&quot;107&quot;:&quot;        try {&quot;,&quot;108&quot;:&quot;            $request-&gt;enableHttpMethodParameterOverride();&quot;,&quot;109&quot;:&quot;&quot;,&quot;110&quot;:&quot;            $response = $this-&gt;sendRequestThroughRouter($request);&quot;,&quot;111&quot;:&quot;        } catch (Throwable $e) {&quot;,&quot;112&quot;:&quot;            $this-&gt;reportException($e);&quot;,&quot;113&quot;:&quot;&quot;,&quot;114&quot;:&quot;            $response = $this-&gt;renderException($request, $e);&quot;,&quot;115&quot;:&quot;        }&quot;,&quot;116&quot;:&quot;&quot;,&quot;117&quot;:&quot;        $this-&gt;app[&#039;events&#039;]-&gt;dispatch(&quot;,&quot;118&quot;:&quot;            new RequestHandled($request, $response)&quot;,&quot;119&quot;:&quot;        );&quot;,&quot;120&quot;:&quot;&quot;,&quot;121&quot;:&quot;        return $response;&quot;,&quot;122&quot;:&quot;    }&quot;,&quot;123&quot;:&quot;&quot;,&quot;124&quot;:&quot;    \/**&quot;,&quot;125&quot;:&quot;     * Send the given request through the middleware \/ router.&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php&quot;},{&quot;line_number&quot;:52,&quot;method&quot;:&quot;require_once&quot;,&quot;class&quot;:null,&quot;code_snippet&quot;:{&quot;26&quot;:&quot;|--------------------------------------------------------------------------&quot;,&quot;27&quot;:&quot;|&quot;,&quot;28&quot;:&quot;| Composer provides a convenient, automatically generated class loader for&quot;,&quot;29&quot;:&quot;| this application. We just need to utilize it! We&#039;ll simply require it&quot;,&quot;30&quot;:&quot;| into the script here so we don&#039;t need to manually load our classes.&quot;,&quot;31&quot;:&quot;|&quot;,&quot;32&quot;:&quot;*\/&quot;,&quot;33&quot;:&quot;&quot;,&quot;34&quot;:&quot;require __DIR__.&#039;\/..\/vendor\/autoload.php&#039;;&quot;,&quot;35&quot;:&quot;&quot;,&quot;36&quot;:&quot;\/*&quot;,&quot;37&quot;:&quot;|--------------------------------------------------------------------------&quot;,&quot;38&quot;:&quot;| Run The Application&quot;,&quot;39&quot;:&quot;|--------------------------------------------------------------------------&quot;,&quot;40&quot;:&quot;|&quot;,&quot;41&quot;:&quot;| Once we have the application, we can handle the incoming request using&quot;,&quot;42&quot;:&quot;| the application&#039;s HTTP kernel. Then, we will send the response back&quot;,&quot;43&quot;:&quot;| to this client&#039;s browser, allowing them to enjoy our application.&quot;,&quot;44&quot;:&quot;|&quot;,&quot;45&quot;:&quot;*\/&quot;,&quot;46&quot;:&quot;&quot;,&quot;47&quot;:&quot;$app = require_once __DIR__.&#039;\/..\/bootstrap\/app.php&#039;;&quot;,&quot;48&quot;:&quot;&quot;,&quot;49&quot;:&quot;$kernel = $app-&gt;make(Kernel::class);&quot;,&quot;50&quot;:&quot;&quot;,&quot;51&quot;:&quot;$response = tap($kernel-&gt;handle(&quot;,&quot;52&quot;:&quot;    $request = Request::capture()&quot;,&quot;53&quot;:&quot;))-&gt;send();&quot;,&quot;54&quot;:&quot;&quot;,&quot;55&quot;:&quot;$kernel-&gt;terminate($request, $response);&quot;,&quot;56&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/public\/index.php&quot;,&quot;is_application_frame&quot;:true,&quot;relative_file&quot;:&quot;public\/index.php&quot;},{&quot;line_number&quot;:21,&quot;method&quot;:&quot;[top]&quot;,&quot;class&quot;:null,&quot;code_snippet&quot;:{&quot;1&quot;:&quot;&lt;?php&quot;,&quot;2&quot;:&quot;&quot;,&quot;3&quot;:&quot;\/**&quot;,&quot;4&quot;:&quot; * Laravel - A PHP Framework For Web Artisans&quot;,&quot;5&quot;:&quot; *&quot;,&quot;6&quot;:&quot; * @package  Laravel&quot;,&quot;7&quot;:&quot; * @author   Taylor Otwell &lt;taylor@laravel.com&gt;&quot;,&quot;8&quot;:&quot; *\/&quot;,&quot;9&quot;:&quot;&quot;,&quot;10&quot;:&quot;$uri = urldecode(&quot;,&quot;11&quot;:&quot;    parse_url($_SERVER[&#039;REQUEST_URI&#039;], PHP_URL_PATH)&quot;,&quot;12&quot;:&quot;);&quot;,&quot;13&quot;:&quot;&quot;,&quot;14&quot;:&quot;\/\/ This file allows us to emulate Apache&#039;s \\&quot;mod_rewrite\\&quot; functionality from the&quot;,&quot;15&quot;:&quot;\/\/ built-in PHP web server. This provides a convenient way to test a Laravel&quot;,&quot;16&quot;:&quot;\/\/ application without having installed a \\&quot;real\\&quot; web server software here.&quot;,&quot;17&quot;:&quot;if ($uri !== &#039;\/&#039; &amp;&amp; file_exists(__DIR__.&#039;\/public&#039;.$uri)) {&quot;,&quot;18&quot;:&quot;    return false;&quot;,&quot;19&quot;:&quot;}&quot;,&quot;20&quot;:&quot;&quot;,&quot;21&quot;:&quot;require_once __DIR__.&#039;\/public\/index.php&#039;;&quot;,&quot;22&quot;:&quot;&quot;},&quot;file&quot;:&quot;\/var\/www\/html\/server.php&quot;,&quot;is_application_frame&quot;:false,&quot;relative_file&quot;:&quot;server.php&quot;}],&quot;context&quot;:{&quot;request&quot;:{&quot;url&quot;:&quot;http:\/\/localhost\/new\/restaurant\/register\/store&quot;,&quot;ip&quot;:null,&quot;method&quot;:&quot;POST&quot;,&quot;useragent&quot;:&quot;Mozilla\/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/88.0.4324.150 Safari\/537.36&quot;},&quot;request_data&quot;:{&quot;queryString&quot;:[],&quot;body&quot;:{&quot;_token&quot;:&quot;qL5L3MTuAfLX2sqNXpIYvDMDmarp2fhcAGN6BcGU&quot;,&quot;name&quot;:&quot;Madness Light Madridsdsdwqw&quot;,&quot;name_owner&quot;:&quot;Madness Light Madridqwqw&quot;,&quot;email_owner&quot;:&quot;daniel.garcia@enjoythat.esqwqw&quot;,&quot;phone_owner&quot;:&quot;667507616312323&quot;},&quot;files&quot;:[]},&quot;headers&quot;:{&quot;host&quot;:[&quot;localhost&quot;],&quot;connection&quot;:[&quot;keep-alive&quot;],&quot;content-length&quot;:[&quot;189&quot;],&quot;cache-control&quot;:[&quot;max-age=0&quot;],&quot;sec-ch-ua&quot;:[&quot;\\&quot;Chromium\\&quot;;v=\\&quot;88\\&quot;, \\&quot;Google Chrome\\&quot;;v=\\&quot;88\\&quot;, \\&quot;;Not A Brand\\&quot;;v=\\&quot;99\\&quot;&quot;],&quot;accept&quot;:[&quot;text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/avif,image\/webp,image\/apng,*\/*;q=0.8,application\/signed-exchange;v=b3;q=0.9&quot;],&quot;origin&quot;:[&quot;http:\/\/localhost&quot;],&quot;upgrade-insecure-requests&quot;:[&quot;1&quot;],&quot;sec-ch-ua-mobile&quot;:[&quot;?0&quot;],&quot;user-agent&quot;:[&quot;Mozilla\/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/88.0.4324.150 Safari\/537.36&quot;],&quot;content-type&quot;:[&quot;application\/x-www-form-urlencoded&quot;],&quot;sec-fetch-site&quot;:[&quot;same-origin&quot;],&quot;sec-fetch-mode&quot;:[&quot;same-origin&quot;],&quot;sec-fetch-dest&quot;:[&quot;empty&quot;],&quot;referer&quot;:[&quot;http:\/\/localhost\/new\/restaurant\/register&quot;],&quot;accept-encoding&quot;:[&quot;gzip, deflate, br&quot;],&quot;accept-language&quot;:[&quot;en-US,en;q=0.9,mk;q=0.8,fr;q=0.7&quot;],&quot;cookie&quot;:[&quot;cookie_consent_level=%7B%22strictly-necessary%22%3Atrue%2C%22functionality%22%3Atrue%2C%22tracking%22%3Atrue%2C%22targeting%22%3Atrue%7D; cookie_consent_user_accepted=true; laravel_cookie_consent=1; food_tiger_session=eyJpdiI6IlpnWUVMamtCRDVpVm02WXhEVWNOaVE9PSIsInZhbHVlIjoiaDBWSUsyaUlvUGFRQ0hMMUR3aFJBWkNUcUNKSGJTK1hsTGFOalhnK05GTURCVE92L3NTOWFBY0QvMUEydzFySExDNlZOWXJhdDdBTEwvanJIemZWQXFRU2VLM0xNWnQ2Wis2V1AyVWhPOWxnQmNXWVdmajhOeVY1b1lsdWJOS3ciLCJtYWMiOiJhMzZjYTBkNjQwMjMxYzc5MDJlZDliMmIzOTU2MWE2ODJmMDc1MDYxZTRhMTQ0MWVhOGJhMzBmMTZjNjJlZTcyIn0%3D; lang=eyJpdiI6ImRsaGtNWUFvYUU1dGw4VzhBRW4vWUE9PSIsInZhbHVlIjoiNms0MzlscU9FcFJ5ZzRKWmZYaDhKTk95bmpWVTJITEZPMnJKSU12eExTeTFUSXZJWjhDN2JmaGxYUmNDVjhHMiIsIm1hYyI6IjkzY2U5ZDY4OGZhNzE1NmM0ZjdjOTZkMWYyMTI1MTg1N2M4OWQ1YTllODZhYWEyODFjZDA1YTc0NjAxZTU4YjgifQ%3D%3D; XSRF-TOKEN=eyJpdiI6IlFlRGlKZVE5ZTRETms2Ukd1eEQraVE9PSIsInZhbHVlIjoiS21yMmRmalM4Qm1Na3lKSjErd2FlV1VwbFd3cHVmbHhuNlJJYTZVWjI4d3VFcDBRZzgyQS9xZWlxTks0UUZnc2Q5UzlhMmYwYjl1eGVwV1R5RURwTjFrVmJmT1VzSlVuTjFMVi81VWw0NW8vSVpQVWhWSnNzWDl6M1dTRFNKTUYiLCJtYWMiOiIzZTcxYzY0YjY3YWY0NGRjMTkzOWE5ZGJiNDRkMjVmOWFiNjQzZDM1ZjhjMWRhNzJiYjIzZGExNzNlYzI4NzM4In0%3D; qr_menu_maker_session=eyJpdiI6IjNGN2toSTNLUzlxRXNMeDhEU01JaGc9PSIsInZhbHVlIjoiZEc1Q2JyTGdCby81eTM5Uk0wNkxRMHdNRzRQNkNWV2R6WXhzdTVrRWFmSmM2cFpMcUhZQkRRSnhmRjh1aW9janlsNXZXVnBRc0EvMXlMcHdTcTRLdy8wOFlDYUZWWjJoa2Z2c0x5RHRWTVMrNTUrQUZrZzJZT2Jwc05QcHpyWXMiLCJtYWMiOiJmOGRjMjQwNWU2YTQxYWZmYWY4YjZmYmNlODUyZGY5NWRjN2FiNjRjOGE2NDI0MDBjMzA0ODRjYTJmOWQ5ZjNkIn0%3D&quot;]},&quot;cookies&quot;:{&quot;cookie_consent_level&quot;:null,&quot;cookie_consent_user_accepted&quot;:null,&quot;laravel_cookie_consent&quot;:&quot;1&quot;,&quot;food_tiger_session&quot;:&quot;D1af6oPTcyj6bRx34IZonUWwlrtADbLLa0MU985C&quot;,&quot;lang&quot;:&quot;EN&quot;,&quot;XSRF-TOKEN&quot;:&quot;qL5L3MTuAfLX2sqNXpIYvDMDmarp2fhcAGN6BcGU&quot;,&quot;qr_menu_maker_session&quot;:&quot;erf1lzg8sfmBKTGvuHlbTxzJbIampVa1fKYlUvVx&quot;},&quot;session&quot;:{&quot;_token&quot;:&quot;qL5L3MTuAfLX2sqNXpIYvDMDmarp2fhcAGN6BcGU&quot;,&quot;applocale_change&quot;:&quot;en&quot;,&quot;_previous&quot;:{&quot;url&quot;:&quot;http:\/\/localhost\/cart-getContent&quot;},&quot;_flash&quot;:{&quot;old&quot;:[],&quot;new&quot;:[]}},&quot;route&quot;:{&quot;route&quot;:&quot;newrestaurant.store&quot;,&quot;routeParameters&quot;:[],&quot;controllerAction&quot;:&quot;App\\\\Http\\\\Controllers\\\\RestorantController@storeRegisterRestaurant&quot;,&quot;middleware&quot;:[&quot;web&quot;]},&quot;user&quot;:[],&quot;env&quot;:{&quot;laravel_version&quot;:&quot;8.23.1&quot;,&quot;laravel_locale&quot;:&quot;en&quot;,&quot;laravel_config_cached&quot;:false,&quot;php_version&quot;:&quot;8.0.1&quot;},&quot;logs&quot;:[],&quot;dumps&quot;:[],&quot;queries&quot;:[{&quot;sql&quot;:&quot;select * from information_schema.tables where table_schema = ? and table_name = ? and table_type = &#039;BASE TABLE&#039;&quot;,&quot;time&quot;:2.19,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;laravel&quot;,&quot;settings&quot;],&quot;microtime&quot;:1612863927.37313},{&quot;sql&quot;:&quot;select * from `settings` where `settings`.`id` = ? limit 1&quot;,&quot;time&quot;:0.87,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[1],&quot;microtime&quot;:1612863927.37442},{&quot;sql&quot;:&quot;select * from `settings` where `settings`.`id` = ? limit 1&quot;,&quot;time&quot;:0.88,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[1],&quot;microtime&quot;:1612863927.375579},{&quot;sql&quot;:&quot;select count(*) as aggregate from `restorants` where `name` = ?&quot;,&quot;time&quot;:1.02,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;Madness Light Madridsdsdwqw&quot;],&quot;microtime&quot;:1612863927.398461},{&quot;sql&quot;:&quot;select count(*) as aggregate from `users` where `email` = ?&quot;,&quot;time&quot;:0.7,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;daniel.garcia@enjoythat.esqwqw&quot;],&quot;microtime&quot;:1612863927.400401},{&quot;sql&quot;:&quot;insert into `users` (`name`, `email`, `phone`, `active`, `api_token`, `password`, `updated_at`, `created_at`) values (?, ?, ?, ?, ?, ?, ?, ?)&quot;,&quot;time&quot;:4.52,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;Madness Light Madridqwqw&quot;,&quot;daniel.garcia@enjoythat.esqwqw&quot;,&quot;667507616312323&quot;,0,&quot;8lWVnLmxL84soCNIuoBt6Y6Ov5zS96DWz89ceY9hCk11E6qRkSUeOJocrBG8gzM1bSu0SM1a1xSSciHx&quot;,null,&quot;2021-02-09 10:45:27&quot;,&quot;2021-02-09 10:45:27&quot;],&quot;microtime&quot;:1612863927.431152},{&quot;sql&quot;:&quot;select column_name as `column_name` from information_schema.columns where table_schema = ? and table_name = ?&quot;,&quot;time&quot;:1.94,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;laravel&quot;,&quot;roles&quot;],&quot;microtime&quot;:1612863927.438053},{&quot;sql&quot;:&quot;select * from `roles` where `name` = ? and `guard_name` = ? limit 1&quot;,&quot;time&quot;:0.76,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;owner&quot;,&quot;web&quot;],&quot;microtime&quot;:1612863927.44076},{&quot;sql&quot;:&quot;select * from `model_has_roles` where `model_id` = ? and `model_type` = ?&quot;,&quot;time&quot;:1.19,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[17,&quot;App\\\\User&quot;],&quot;microtime&quot;:1612863927.452123},{&quot;sql&quot;:&quot;insert into `model_has_roles` (`model_id`, `model_type`, `role_id`) values (?, ?, ?)&quot;,&quot;time&quot;:29.98,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[17,&quot;App\\\\User&quot;,2],&quot;microtime&quot;:1612863927.482922},{&quot;sql&quot;:&quot;select `roles`.*, `model_has_roles`.`model_id` as `pivot_model_id`, `model_has_roles`.`role_id` as `pivot_role_id`, `model_has_roles`.`model_type` as `pivot_model_type` from `roles` inner join `model_has_roles` on `roles`.`id` = `model_has_roles`.`role_id` where `model_has_roles`.`model_id` in (17) and `model_has_roles`.`model_type` = ?&quot;,&quot;time&quot;:1.11,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;App\\\\User&quot;],&quot;microtime&quot;:1612863927.485965},{&quot;sql&quot;:&quot;insert into `restorants` (`radius`, `name`, `user_id`, `description`, `minimum`, `lat`, `lng`, `address`, `phone`, `active`, `subdomain`, `updated_at`, `created_at`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)&quot;,&quot;time&quot;:4.45,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;{}&quot;,&quot;Madness Light Madridsdsdwqw&quot;,17,&quot;&quot;,0,0,0,&quot;&quot;,&quot;667507616312323&quot;,0,null,&quot;2021-02-09 10:45:27&quot;,&quot;2021-02-09 10:45:27&quot;],&quot;microtime&quot;:1612863927.500357},{&quot;sql&quot;:&quot;update `restorants` set `active` = ?, `subdomain` = ?, `restorants`.`updated_at` = ? where `id` = ?&quot;,&quot;time&quot;:4.12,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[1,&quot;madnesslightmadridsdsdwqw&quot;,&quot;2021-02-09 10:45:27&quot;,31],&quot;microtime&quot;:1612863927.505584},{&quot;sql&quot;:&quot;select * from `users` where `users`.`id` = ? limit 1&quot;,&quot;time&quot;:1.36,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[17],&quot;microtime&quot;:1612863927.512686},{&quot;sql&quot;:&quot;update `users` set `password` = ?, `active` = ?, `users`.`updated_at` = ? where `id` = ?&quot;,&quot;time&quot;:5.1,&quot;connection_name&quot;:&quot;mysql&quot;,&quot;bindings&quot;:[&quot;$2y$10$4e.\/9JV7j5NsLS39RTp0ceXVlr0OQmD7SZpURd\/G7YiDeFn5m5dtS&quot;,1,&quot;2021-02-09 10:45:27&quot;,17],&quot;microtime&quot;:1612863927.575551}]},&quot;stage&quot;:&quot;local&quot;,&quot;message_level&quot;:null,&quot;open_frame_index&quot;:null,&quot;group_by&quot;:&quot;topFrame&quot;,&quot;application_path&quot;:&quot;\/var\/www\/html&quot;}<\/span>\"\n  \"<span class=sf-dump-key>tabs<\/span>\" => <span class=sf-dump-note>array:6<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"13 characters\">stackTraceTab<\/span>\"\n    <span class=sf-dump-index>1<\/span> => \"<span class=sf-dump-str title=\"10 characters\">requestTab<\/span>\"\n    <span class=sf-dump-index>2<\/span> => \"<span class=sf-dump-str title=\"6 characters\">appTab<\/span>\"\n    <span class=sf-dump-index>3<\/span> => \"<span class=sf-dump-str title=\"7 characters\">userTab<\/span>\"\n    <span class=sf-dump-index>4<\/span> => \"<span class=sf-dump-str title=\"10 characters\">contextTab<\/span>\"\n    <span class=sf-dump-index>5<\/span> => \"<span class=sf-dump-str title=\"8 characters\">debugTab<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>lineSelection<\/span>\" => <span class=sf-dump-const>null<\/span>\n<\/samp>]\n<\/pre><script>Sfdump(\"sf-dump-1664117262\", {\"maxDepth\":0})<\/script>\n","request_headers":"<pre class=sf-dump id=sf-dump-1147789480 data-indent-pad=\"  \"><span class=sf-dump-note>array:16<\/span> [<samp data-depth=1 class=sf-dump-expanded>\n  \"<span class=sf-dump-key>host<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"9 characters\">localhost<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>connection<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"10 characters\">keep-alive<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>content-length<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"6 characters\">132162<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>sec-ch-ua<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"64 characters\">&quot;Chromium&quot;;v=&quot;88&quot;, &quot;Google Chrome&quot;;v=&quot;88&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>accept<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>sec-ch-ua-mobile<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"2 characters\">?0<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>user-agent<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"120 characters\">Mozilla\/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/88.0.4324.150 Safari\/537.36<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>content-type<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>origin<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"16 characters\">http:\/\/localhost<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>sec-fetch-site<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"11 characters\">same-origin<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>sec-fetch-mode<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"4 characters\">cors<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>sec-fetch-dest<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"5 characters\">empty<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>referer<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"46 characters\">http:\/\/localhost\/new\/restaurant\/register\/store<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>accept-encoding<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"17 characters\">gzip, deflate, br<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>accept-language<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"32 characters\">en-US,en;q=0.9,mk;q=0.8,fr;q=0.7<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>cookie<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"1500 characters\">cookie_consent_level=%7B%22strictly-necessary%22%3Atrue%2C%22functionality%22%3Atrue%2C%22tracking%22%3Atrue%2C%22targeting%22%3Atrue%7D; cookie_consent_user_accepted=true; laravel_cookie_consent=1; food_tiger_session=eyJpdiI6IlpnWUVMamtCRDVpVm02WXhEVWNOaVE9PSIsInZhbHVlIjoiaDBWSUsyaUlvUGFRQ0hMMUR3aFJBWkNUcUNKSGJTK1hsTGFOalhnK05GTURCVE92L3NTOWFBY0QvMUEydzFySExDNlZOWXJhdDdBTEwvanJIemZWQXFRU2VLM0xNWnQ2Wis2V1AyVWhPOWxnQmNXWVdmajhOeVY1b1lsdWJOS3ciLCJtYWMiOiJhMzZjYTBkNjQwMjMxYzc5MDJlZDliMmIzOTU2MWE2ODJmMDc1MDYxZTRhMTQ0MWVhOGJhMzBmMTZjNjJlZTcyIn0%3D; lang=eyJpdiI6ImRsaGtNWUFvYUU1dGw4VzhBRW4vWUE9PSIsInZhbHVlIjoiNms0MzlscU9FcFJ5ZzRKWmZYaDhKTk95bmpWVTJITEZPMnJKSU12eExTeTFUSXZJWjhDN2JmaGxYUmNDVjhHMiIsIm1hYyI6IjkzY2U5ZDY4OGZhNzE1NmM0ZjdjOTZkMWYyMTI1MTg1N2M4OWQ1YTllODZhYWEyODFjZDA1YTc0NjAxZTU4YjgifQ%3D%3D; XSRF-TOKEN=eyJpdiI6IkF0SlU0bDAwNkQxSkZ2N3d0TExqekE9PSIsInZhbHVlIjoiTE5BdVoySWpJMkFIdUhHL2ExVE9QUUdObTB2ME50VGQyUHNWY01zcndJeFhGd3ZLVmpIU2I5Ymx5QVplZGdUbExVcTZlQmJIelNobWsvWUhUdFo5OWloSG1EWllGZFE3alNiS0wvY3R2ZjFlMHRBdXpJUVlZbm12NDA1S1psOEgiLCJtYWMiOiI0NzE1YzcwNWZkZDQ1ZTg3OTZhZTA1NWI0MWNmMDM3YjYxM2NlY2E5MGUxYzljZWZjYTU3OTU2NDdiMjcxYzRjIn0%3D; qr_menu_maker_session=eyJpdiI6Ilg2ZVVPeVRtWkNMOVZKMlZDMTFQcnc9PSIsInZhbHVlIjoiRWpDanNvTlpSZHdidDYvQ0JuMEdVRlRTdEFrSlJPcXA0VjAwYkY2NjRBdnErUHllR3BNME9LVGNIbXhRS2RSZ0hMSFpZMDBGZGNJVFQxb1Foa2c2ckRRZEtNYnA0VmFCeHRPMWNuRm54M0VqVCtSTXE1ellreUhWdFVCa0UzTTciLCJtYWMiOiI2MzYwZjA3ZjQ5YjU5NjIwODAyMWVlNDJiY2RjOWU4OTQyMDUxYWU1MGUyOTVjOWY2NzA0ZmI0MzU3ZTljMTdhIn0%3D<\/span>\"\n  <\/samp>]\n<\/samp>]\n<\/pre><script>Sfdump(\"sf-dump-1147789480\", {\"maxDepth\":0})<\/script>\n","request_server":"<pre class=sf-dump id=sf-dump-1291609036 data-indent-pad=\"  \"><span class=sf-dump-note>array:33<\/span> [<samp data-depth=1 class=sf-dump-expanded>\n  \"<span class=sf-dump-key>DOCUMENT_ROOT<\/span>\" => \"<span class=sf-dump-str title=\"20 characters\">\/var\/www\/html\/public<\/span>\"\n  \"<span class=sf-dump-key>REMOTE_ADDR<\/span>\" => \"<span class=sf-dump-str title=\"10 characters\">172.19.0.1<\/span>\"\n  \"<span class=sf-dump-key>REMOTE_PORT<\/span>\" => \"<span class=sf-dump-str title=\"5 characters\">57002<\/span>\"\n  \"<span class=sf-dump-key>SERVER_SOFTWARE<\/span>\" => \"<span class=sf-dump-str title=\"28 characters\">PHP 8.0.1 Development Server<\/span>\"\n  \"<span class=sf-dump-key>SERVER_PROTOCOL<\/span>\" => \"<span class=sf-dump-str title=\"8 characters\">HTTP\/1.1<\/span>\"\n  \"<span class=sf-dump-key>SERVER_NAME<\/span>\" => \"<span class=sf-dump-str title=\"7 characters\">0.0.0.0<\/span>\"\n  \"<span class=sf-dump-key>SERVER_PORT<\/span>\" => \"<span class=sf-dump-str title=\"2 characters\">80<\/span>\"\n  \"<span class=sf-dump-key>REQUEST_URI<\/span>\" => \"<span class=sf-dump-str title=\"23 characters\">\/_ignition\/share-report<\/span>\"\n  \"<span class=sf-dump-key>REQUEST_METHOD<\/span>\" => \"<span class=sf-dump-str title=\"4 characters\">POST<\/span>\"\n  \"<span class=sf-dump-key>SCRIPT_NAME<\/span>\" => \"<span class=sf-dump-str title=\"10 characters\">\/index.php<\/span>\"\n  \"<span class=sf-dump-key>SCRIPT_FILENAME<\/span>\" => \"<span class=sf-dump-str title=\"30 characters\">\/var\/www\/html\/public\/index.php<\/span>\"\n  \"<span class=sf-dump-key>PATH_INFO<\/span>\" => \"<span class=sf-dump-str title=\"23 characters\">\/_ignition\/share-report<\/span>\"\n  \"<span class=sf-dump-key>PHP_SELF<\/span>\" => \"<span class=sf-dump-str title=\"33 characters\">\/index.php\/_ignition\/share-report<\/span>\"\n  \"<span class=sf-dump-key>HTTP_HOST<\/span>\" => \"<span class=sf-dump-str title=\"9 characters\">localhost<\/span>\"\n  \"<span class=sf-dump-key>HTTP_CONNECTION<\/span>\" => \"<span class=sf-dump-str title=\"10 characters\">keep-alive<\/span>\"\n  \"<span class=sf-dump-key>CONTENT_LENGTH<\/span>\" => \"<span class=sf-dump-str title=\"6 characters\">132162<\/span>\"\n  \"<span class=sf-dump-key>HTTP_CONTENT_LENGTH<\/span>\" => \"<span class=sf-dump-str title=\"6 characters\">132162<\/span>\"\n  \"<span class=sf-dump-key>HTTP_SEC_CH_UA<\/span>\" => \"<span class=sf-dump-str title=\"64 characters\">&quot;Chromium&quot;;v=&quot;88&quot;, &quot;Google Chrome&quot;;v=&quot;88&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;<\/span>\"\n  \"<span class=sf-dump-key>HTTP_ACCEPT<\/span>\" => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  \"<span class=sf-dump-key>HTTP_SEC_CH_UA_MOBILE<\/span>\" => \"<span class=sf-dump-str title=\"2 characters\">?0<\/span>\"\n  \"<span class=sf-dump-key>HTTP_USER_AGENT<\/span>\" => \"<span class=sf-dump-str title=\"120 characters\">Mozilla\/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/88.0.4324.150 Safari\/537.36<\/span>\"\n  \"<span class=sf-dump-key>CONTENT_TYPE<\/span>\" => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  \"<span class=sf-dump-key>HTTP_CONTENT_TYPE<\/span>\" => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  \"<span class=sf-dump-key>HTTP_ORIGIN<\/span>\" => \"<span class=sf-dump-str title=\"16 characters\">http:\/\/localhost<\/span>\"\n  \"<span class=sf-dump-key>HTTP_SEC_FETCH_SITE<\/span>\" => \"<span class=sf-dump-str title=\"11 characters\">same-origin<\/span>\"\n  \"<span class=sf-dump-key>HTTP_SEC_FETCH_MODE<\/span>\" => \"<span class=sf-dump-str title=\"4 characters\">cors<\/span>\"\n  \"<span class=sf-dump-key>HTTP_SEC_FETCH_DEST<\/span>\" => \"<span class=sf-dump-str title=\"5 characters\">empty<\/span>\"\n  \"<span class=sf-dump-key>HTTP_REFERER<\/span>\" => \"<span class=sf-dump-str title=\"46 characters\">http:\/\/localhost\/new\/restaurant\/register\/store<\/span>\"\n  \"<span class=sf-dump-key>HTTP_ACCEPT_ENCODING<\/span>\" => \"<span class=sf-dump-str title=\"17 characters\">gzip, deflate, br<\/span>\"\n  \"<span class=sf-dump-key>HTTP_ACCEPT_LANGUAGE<\/span>\" => \"<span class=sf-dump-str title=\"32 characters\">en-US,en;q=0.9,mk;q=0.8,fr;q=0.7<\/span>\"\n  \"<span class=sf-dump-key>HTTP_COOKIE<\/span>\" => \"<span class=sf-dump-str title=\"1500 characters\">cookie_consent_level=%7B%22strictly-necessary%22%3Atrue%2C%22functionality%22%3Atrue%2C%22tracking%22%3Atrue%2C%22targeting%22%3Atrue%7D; cookie_consent_user_accepted=true; laravel_cookie_consent=1; food_tiger_session=eyJpdiI6IlpnWUVMamtCRDVpVm02WXhEVWNOaVE9PSIsInZhbHVlIjoiaDBWSUsyaUlvUGFRQ0hMMUR3aFJBWkNUcUNKSGJTK1hsTGFOalhnK05GTURCVE92L3NTOWFBY0QvMUEydzFySExDNlZOWXJhdDdBTEwvanJIemZWQXFRU2VLM0xNWnQ2Wis2V1AyVWhPOWxnQmNXWVdmajhOeVY1b1lsdWJOS3ciLCJtYWMiOiJhMzZjYTBkNjQwMjMxYzc5MDJlZDliMmIzOTU2MWE2ODJmMDc1MDYxZTRhMTQ0MWVhOGJhMzBmMTZjNjJlZTcyIn0%3D; lang=eyJpdiI6ImRsaGtNWUFvYUU1dGw4VzhBRW4vWUE9PSIsInZhbHVlIjoiNms0MzlscU9FcFJ5ZzRKWmZYaDhKTk95bmpWVTJITEZPMnJKSU12eExTeTFUSXZJWjhDN2JmaGxYUmNDVjhHMiIsIm1hYyI6IjkzY2U5ZDY4OGZhNzE1NmM0ZjdjOTZkMWYyMTI1MTg1N2M4OWQ1YTllODZhYWEyODFjZDA1YTc0NjAxZTU4YjgifQ%3D%3D; XSRF-TOKEN=eyJpdiI6IkF0SlU0bDAwNkQxSkZ2N3d0TExqekE9PSIsInZhbHVlIjoiTE5BdVoySWpJMkFIdUhHL2ExVE9QUUdObTB2ME50VGQyUHNWY01zcndJeFhGd3ZLVmpIU2I5Ymx5QVplZGdUbExVcTZlQmJIelNobWsvWUhUdFo5OWloSG1EWllGZFE3alNiS0wvY3R2ZjFlMHRBdXpJUVlZbm12NDA1S1psOEgiLCJtYWMiOiI0NzE1YzcwNWZkZDQ1ZTg3OTZhZTA1NWI0MWNmMDM3YjYxM2NlY2E5MGUxYzljZWZjYTU3OTU2NDdiMjcxYzRjIn0%3D; qr_menu_maker_session=eyJpdiI6Ilg2ZVVPeVRtWkNMOVZKMlZDMTFQcnc9PSIsInZhbHVlIjoiRWpDanNvTlpSZHdidDYvQ0JuMEdVRlRTdEFrSlJPcXA0VjAwYkY2NjRBdnErUHllR3BNME9LVGNIbXhRS2RSZ0hMSFpZMDBGZGNJVFQxb1Foa2c2ckRRZEtNYnA0VmFCeHRPMWNuRm54M0VqVCtSTXE1ellreUhWdFVCa0UzTTciLCJtYWMiOiI2MzYwZjA3ZjQ5YjU5NjIwODAyMWVlNDJiY2RjOWU4OTQyMDUxYWU1MGUyOTVjOWY2NzA0ZmI0MzU3ZTljMTdhIn0%3D<\/span>\"\n  \"<span class=sf-dump-key>REQUEST_TIME_FLOAT<\/span>\" => <span class=sf-dump-num>1612863941.7157<\/span>\n  \"<span class=sf-dump-key>REQUEST_TIME<\/span>\" => <span class=sf-dump-num>1612863941<\/span>\n<\/samp>]\n<\/pre><script>Sfdump(\"sf-dump-1291609036\", {\"maxDepth\":0})<\/script>\n","request_cookies":"<pre class=sf-dump id=sf-dump-1332380454 data-indent-pad=\"  \"><span class=sf-dump-note>array:7<\/span> [<samp data-depth=1 class=sf-dump-expanded>\n  \"<span class=sf-dump-key>cookie_consent_level<\/span>\" => \"<span class=sf-dump-str title=\"81 characters\">{&quot;strictly-necessary&quot;:true,&quot;functionality&quot;:true,&quot;tracking&quot;:true,&quot;targeting&quot;:true}<\/span>\"\n  \"<span class=sf-dump-key>cookie_consent_user_accepted<\/span>\" => \"<span class=sf-dump-str title=\"4 characters\">true<\/span>\"\n  \"<span class=sf-dump-key>laravel_cookie_consent<\/span>\" => \"<span class=sf-dump-str>1<\/span>\"\n  \"<span class=sf-dump-key>food_tiger_session<\/span>\" => \"<span class=sf-dump-str title=\"328 characters\">eyJpdiI6IlpnWUVMamtCRDVpVm02WXhEVWNOaVE9PSIsInZhbHVlIjoiaDBWSUsyaUlvUGFRQ0hMMUR3aFJBWkNUcUNKSGJTK1hsTGFOalhnK05GTURCVE92L3NTOWFBY0QvMUEydzFySExDNlZOWXJhdDdBTEwvanJIemZWQXFRU2VLM0xNWnQ2Wis2V1AyVWhPOWxnQmNXWVdmajhOeVY1b1lsdWJOS3ciLCJtYWMiOiJhMzZjYTBkNjQwMjMxYzc5MDJlZDliMmIzOTU2MWE2ODJmMDc1MDYxZTRhMTQ0MWVhOGJhMzBmMTZjNjJlZTcyIn0=<\/span>\"\n  \"<span class=sf-dump-key>lang<\/span>\" => \"<span class=sf-dump-str title=\"244 characters\">eyJpdiI6ImRsaGtNWUFvYUU1dGw4VzhBRW4vWUE9PSIsInZhbHVlIjoiNms0MzlscU9FcFJ5ZzRKWmZYaDhKTk95bmpWVTJITEZPMnJKSU12eExTeTFUSXZJWjhDN2JmaGxYUmNDVjhHMiIsIm1hYyI6IjkzY2U5ZDY4OGZhNzE1NmM0ZjdjOTZkMWYyMTI1MTg1N2M4OWQ1YTllODZhYWEyODFjZDA1YTc0NjAxZTU4YjgifQ==<\/span>\"\n  \"<span class=sf-dump-key>XSRF-TOKEN<\/span>\" => \"<span class=sf-dump-str title=\"328 characters\">eyJpdiI6IkF0SlU0bDAwNkQxSkZ2N3d0TExqekE9PSIsInZhbHVlIjoiTE5BdVoySWpJMkFIdUhHL2ExVE9QUUdObTB2ME50VGQyUHNWY01zcndJeFhGd3ZLVmpIU2I5Ymx5QVplZGdUbExVcTZlQmJIelNobWsvWUhUdFo5OWloSG1EWllGZFE3alNiS0wvY3R2ZjFlMHRBdXpJUVlZbm12NDA1S1psOEgiLCJtYWMiOiI0NzE1YzcwNWZkZDQ1ZTg3OTZhZTA1NWI0MWNmMDM3YjYxM2NlY2E5MGUxYzljZWZjYTU3OTU2NDdiMjcxYzRjIn0=<\/span>\"\n  \"<span class=sf-dump-key>qr_menu_maker_session<\/span>\" => \"<span class=sf-dump-str title=\"328 characters\">eyJpdiI6Ilg2ZVVPeVRtWkNMOVZKMlZDMTFQcnc9PSIsInZhbHVlIjoiRWpDanNvTlpSZHdidDYvQ0JuMEdVRlRTdEFrSlJPcXA0VjAwYkY2NjRBdnErUHllR3BNME9LVGNIbXhRS2RSZ0hMSFpZMDBGZGNJVFQxb1Foa2c2ckRRZEtNYnA0VmFCeHRPMWNuRm54M0VqVCtSTXE1ellreUhWdFVCa0UzTTciLCJtYWMiOiI2MzYwZjA3ZjQ5YjU5NjIwODAyMWVlNDJiY2RjOWU4OTQyMDUxYWU1MGUyOTVjOWY2NzA0ZmI0MzU3ZTljMTdhIn0=<\/span>\"\n<\/samp>]\n<\/pre><script>Sfdump(\"sf-dump-1332380454\", {\"maxDepth\":0})<\/script>\n","response_headers":"<pre class=sf-dump id=sf-dump-447699730 data-indent-pad=\"  \"><span class=sf-dump-note>array:3<\/span> [<samp data-depth=1 class=sf-dump-expanded>\n  \"<span class=sf-dump-key>cache-control<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"17 characters\">no-cache, private<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>date<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"29 characters\">Tue, 09 Feb 2021 09:45:42 GMT<\/span>\"\n  <\/samp>]\n  \"<span class=sf-dump-key>content-type<\/span>\" => <span class=sf-dump-note>array:1<\/span> [<samp data-depth=2 class=sf-dump-compact>\n    <span class=sf-dump-index>0<\/span> => \"<span class=sf-dump-str title=\"16 characters\">application\/json<\/span>\"\n  <\/samp>]\n<\/samp>]\n<\/pre><script>Sfdump(\"sf-dump-447699730\", {\"maxDepth\":0})<\/script>\n","session_attributes":"<pre class=sf-dump id=sf-dump-1850861023 data-indent-pad=\"  \">[]\n<\/pre><script>Sfdump(\"sf-dump-1850861023\", {\"maxDepth\":0})<\/script>\n"}}